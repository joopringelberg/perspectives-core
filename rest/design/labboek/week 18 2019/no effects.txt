NO MORE EFFECTS

Ik ga de code aanpassen zodat Eff niet langer gebruikt wordt. 

TODO
1. Zoek uit hoe ik packages.json in psc-0.11.7-perspectives-core moet aanpassen. Issues:
	* wat zijn de specifieke packages die ik heb toegevoegd?
	* op welke standaard packages heb ik modificaties toegevoegd?
	* kan ik weer beginnen bij een standaard, gepubliceerde package list? Of moet ik mijn lijst bewerken?

2. Ad specifieke packages die ik heb toegevoegd: ik kan beginnen bij psc-package.json. Wat daarin staat, moet in de package list zitten die ik ga gebruiken.

3. Welke veranderingen heb ik aangebracht in packages van anderen?

4. Ik wil een vergelijking maken tussen de packages.json in mijn branch en de master. Hoe doe ik dat?

	git difftool --tool=opendiff  WorkingQueries:src/domeinCache.purs master:src/domeinCache.purs
	git difftool --tool=opendiff  psc-0.11.7-perspectives-core:packages.json master:packages.json

5. Ga na of packages die ik aan de lijst heb toegevoegd, die niet van mijzelf zijn, een nieuwe versie hebben.


PACKAGE SETS SYNCEN
Wat ik deed:
	$ git remote add upstream https://github.com/purescript/package-sets.git
	$ git fetch upstream
	$ git checkout master
	$ git merge upstream/master
	$ git push origin master

De master is nu bijgewerkt. Nu kan ik de veranderingen in de master mergen in de branch. Maar ik wil kunnen herstellen als het fout gaat. Hoe doe ik dat?
Een merge geeft veranderingen, lokaal. Die kan ik in Atom ook weer verwerpen.
Moet ik de branch in de master mergen? Of andersom?

PACKAGES DIE IK HEB TOEGEVOEGD OF AANGEPAST
							AANGEPAST	IN NIEUWSTE VERSIE		PSC-12.5-PERSPECTIVES	GECOMPILEERD		BUMP VERSION
* aff-sockets													+							+					v2.0.0
* affjax					X									+							
* avar-monadask													+							+					v2.0.0
* node-mailer				X					- 				+							+
* parsing					X									+							+
* perspectives-apitypes											+							+					v2.0.0
* perspectives-couchdb											+							+					v2.0.0
* datetime-iso									- 				+
* uuid											- 				+
* uri											- 				+

MOGELIJKE PROBLEMEN BIJ MERGEN
1. Packages die ik heb aangepast, verwijzen nu naar een andere repository. Eigenlijk moet ik upstream commits doorvoeren in die packages.
2. Het parsing package zat oorspronkelijk niet in de package set. Ik heb het toegevoegd èn er veranderingen in aangebracht.

Packages die ik moet bijwerken
* affjax. Er is een nieuwere versie. Daar moet ik mijn wijzigingen in doorvoeren.
* parsing.

PARSING PACKAGE
git remote add upstream https://github.com/purescript-contrib/purescript-parsing.git
git fetch upstream
git merge upstream/master
git push origin master

master is nu actueel.
Waar ga ik nu in bijwerken?
Ik denk in indentparser-transformer

git checkout indentparser-transformer
git merge upstream/master

Ik heb de conflicten in Indent.purs opgelost.
Nu kan ik committen in Git, de remote repository bijwerken. 
Een nieuwe tag maken en die gebruiken in mijn package.

Ik kies voor een tag die de laatste tag van de master reflecteert.
v5.1.0 => pv5.1.0
Deze tag gaat naar de nieuwe packages.

AFFJAX
git remote add upstream https://github.com/slamdata/purescript-affjax.git
git fetch upstream
git merge upstream/master
git push origin master

Merged de upstream master in v5-with-xhr-cookies en die ook naar de repository gepushed.
Moet ik nu een tag maken en packages aanpassen?
Ja. Ik had tag v5.1.0. De master is nu tag v9.0.0. Ik ga van mijn branch pv9.0.0 maken.

git tag -a pv9.0.0 -m "Version v9.0.0 with xhr-cookies"

PACKAGES DIE NIET IN DE MASTER PACKAGELIJST STAAN 
node-mailer		KLAAR
datetime-iso 	KLAAR
uuid			KLAAR

NODE-MAILER
git remote add upstream https://github.com/oreshinya/purescript-nodemailer.git

merged de upstream in de master en in de branch serviceTransportConfig.

Tag maken. De tag was: "v0.1.0-service"
De nieuwste tag is v1.0.0. Ik maak daarvan pv1.0.0
FOUT: de nieuwste tag was v2.0.0. DIT MOET NOG HERSTELD WORDEN.

git tag -a pv1.0.0 -m "Version v1.0.0 with service"

DATETIME-ISO
Nieuwste versie is: v3.0.0
Package versie is: v1.0.2
De vraag is: is v3.0.0 geschikt voor de nieuwe compiler?
"dependencies": {
        "purescript-prelude": "^4.1.0",
        "purescript-argonaut-codecs": "^5.1.0",
        "purescript-datetime": "^4.0.0",
        "purescript-parsing": "^5.0.1",
        "purescript-newtype": "^3.0.0"

Ja. Parsing dependency is de meest recente.
Dus: ik verhoog het versienummer in mijn packagelist naar v3.0.0

UUID
Nieuwste versie: v5.2.2
Versie in packagelist: v4.0.0
"dependencies": {
    "purescript-effect": "^2.0.0"
  },
Maakt dus gebruik van de Effect Monad en is daarmee up to date.
Ik verhoog het versienummer in mijn packagelist naar v5.2.2

PACKAGE SETS IS BIJGEWERKT, NU OPSLAAN
1. Hoe gebruik ik package sets in Perspectives en andere projecten? Tag?
psc-package.json heeft als waarde voor "set": "psc-0.11.7-perspectives-core"
  "set": "psc-0.11.7-perspectives-core",
  "source": "https://github.com/joopringelberg/package-sets.git",

Dat is de naam van een branch. Dus door de branch up to date te houden op github, en de branchnaam te gebruiken in projecten, kan ik zonder tags de packagelijst bijwerken en gebruiken.

Dan zou ik nu simpelweg moeten committen naar package-sets. 
MAAR: ik wil terug kunnen schakelen.
Daarom maak ik nu een tag van de laatste versie die ik had voordat ik aan de update begon.
De afgekorte commit hash daarvan is van vier dagen geleden: ec7ff02 NEEN, DIT IS FOUT. HET MOET DIT ZIJN: 487369f
Hoe maak ik een tag van een commit hash?

	git tag -a v1.2 9fceb02 -m "Message here"
	git tag -af compilerv0.11.7 487369f -m "This package set works with compiler version v0.11.7"
	
LET OP.
De branchnaam heeft compiler versie 11.7 in zich. Er is nu een tag met de naam compilerv0.11.7
Ik zou nu een branch kunnen opzetten met de naam psc-12-perspectives en dan die als package-set naam gaan gebruiken in de projecten.
Gedaan als volgt:
	* git checkout master
	* git branch psc-12-perspectives
	* git checkout psc-12-perspectives
	* git merge psc-0.11.7-perspectives-core
	* git push origin psc-12-perspectives
Dan zou het een branch van de master zijn.

Nu kan ik in projecten psc-12-perspectives gaan gebruiken.

PROBLEEM MET HET NIEUWE PACKAGE
Package uri does not exist in package set. Dat moet dus het package 'uri' zijn!
Is er nu wel in. Nu de volgende melding: 'maps'.
Maar dat is een dependency die verdwenen is in de laatste versie:
{
    "purescript-arrays": "^5.0.0",
    "purescript-generics-rep": "^6.0.0",
    "purescript-globals": "^4.0.0",
    "purescript-integers": "^4.0.0",
    "purescript-parsing": "^5.0.0",
    "purescript-profunctor-lenses": "^6.0.0",
    "purescript-unfoldable": "^4.0.0",
    "purescript-these": "^4.0.0"
  }

TODO: check andere geactualiseerde packages voor geactualiseerde dependencies!
	* node-mailer		KLAAR
	* datetime-iso		KLAAR
	* uuid


NIEUWE COMPILER INSTALLEREN
Uiteindelijk heb ik Node versie lts/carbon -> v8.16.0 geïnstalleerd. En toen:
	* purs
	* pulp
	* psc-package

Het probleem is nu dat de build niets oplevert in output. Een global rebuild levert niets op.

In een vers project lukt het wel.

purs compile: No files found using pattern: .psc-package/psc-12-perspectives/avar-monadask/v1.0.0/src/**/*.purs

AVAR-MONADASK
	git tag -a v2.0.0 -m "This package set works with compiler version 12.5"