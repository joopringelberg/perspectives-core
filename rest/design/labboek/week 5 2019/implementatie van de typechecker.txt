ASPECTEN

1. Controleert de typechecker de toewijzing van een subject- of objectRol? D.w.z. als we een RolInContext een SubjectRol geven, controleert de typechecker dan of de subjectView van de Actie gedragen wordt door de toegewezen RolInContext?

2. Houdt de typechecker rekening met het 'contextualiseren' van de mogelijkeBinding van een Rol B in een Rol A? Elke property van de rol B is een opvraagbare property van rol A. B is eigenlijk als een Aspect van A.	

3. Werk de vergelijking tussen een Aspect hebben een een subtype zijn, uit.
	DAT IS AL GEBEURD: zie de laatste alinea's van "Aspecten" en de tekst "Type checking".

4. Implementeer basisfuncties (object- en triplegetters) voor Aspecten. Dus bijvoorbeeld: 
* verzamel recursief alle aspecten van een context;
* verzamel recursief alle aspectrollen van een rol;
* verzamel recursief alle gedefinieerde properties van een rol
	- inclusief
	- exclusief de mogelijkeBinding
* Bepaal recursief of een Property verplicht is, via de aspecten van de rol waar de Property bij is gedefinieerd

5. Houdt de typechecker rekening met aspectProperties en controleert hij of een genoemde aspectProperty wel een property is van de AspectRol van de Rol die de Property draagt die de aspectProperty heeft?

TODO
1. Omschrijf nauwkeurig de deelberekeningen die je moet kunnen doen om aspecten te kunnen typechecken.
2. Zoek in de code naar implementaties daarvan.
3. Rationaliseer de implementatie en vul aan. Bedenk een systematiek voor namen.
4. Controleer de typechecker. Zijn alle controlemogelijkheden ge√Ømplementeerd?