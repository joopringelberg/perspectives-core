// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Reader = require("../Control.Monad.Reader");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_DomeinFile = require("../Perspectives.DomeinFile");
var Perspectives_Effects = require("../Perspectives.Effects");
var Perspectives_GlobalUnsafeStrMap = require("../Perspectives.GlobalUnsafeStrMap");
var Perspectives_Syntax = require("../Perspectives.Syntax");
var Prelude = require("../Prelude");
var runPerspectivesWithState = Control_Monad_Reader_Trans.runReaderT;
var newPerspectivesState = function (uinfo) {
    return function (av) {
        return {
            rolDefinitions: Perspectives_GlobalUnsafeStrMap["new"](Data_Unit.unit),
            contextDefinitions: Perspectives_GlobalUnsafeStrMap["new"](Data_Unit.unit),
            domeinCache: Perspectives_GlobalUnsafeStrMap["new"](Data_Unit.unit),
            userInfo: uinfo,
            couchdbSessionStarted: false,
            sessionCookie: av,
            memorizeQueryResults: true
        };
    };
};
var runPerspectives = function (userName) {
    return function (password) {
        return function (mp) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar("This value will be removed on first authentication!"))(function (v) {
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar(newPerspectivesState({
                    userName: userName,
                    couchdbPassword: password,
                    couchdbBaseURL: "http://127.0.0.1:5984/"
                })(v)))(function (v1) {
                    return Control_Monad_Reader_Trans.runReaderT(mp)(v1);
                });
            });
        };
    };
};
var lookup = function (g) {
    return function (k) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(g)(function (v) {
            return Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Perspectives_GlobalUnsafeStrMap.peek(v)(k)));
        });
    };
};
var insert = function (g) {
    return function (ns) {
        return function (av) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(g)(function (v) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Perspectives_GlobalUnsafeStrMap.poke(v)(ns)(av))))(function (v1) {
                    return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(av);
                });
            });
        };
    };
};
var getAVarWithPerspectivesState = Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Aff.monadAff));
var getPerspectivesState = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getAVarWithPerspectivesState)(function ($22) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.readVar($22));
});
var getsPerspectivesState = function (f) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getPerspectivesState)(function ($23) {
        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(f($23));
    });
};
var readSessionCookieValue = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getsPerspectivesState(function (v) {
    return v.sessionCookie;
}))(function ($24) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.readVar($24));
});
var rolDefinitions = getsPerspectivesState(function (v) {
    return v.rolDefinitions;
});
var rolDefinitionsInsert = insert(rolDefinitions);
var rolDefinitionsLookup = lookup(rolDefinitions);
var sessionCookie = getsPerspectivesState(function (v) {
    return v.sessionCookie;
});
var setSessionCookie = function (c) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(sessionCookie)(function ($25) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.putVar(c)($25));
    });
};
var takeSessionCookieValue = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getsPerspectivesState(function (v) {
    return v.sessionCookie;
}))(function ($26) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.takeVar($26));
});
var tryReadSessionCookieValue = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getsPerspectivesState(function (v) {
    return v.sessionCookie;
}))(function ($27) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.tryReadVar($27));
});
var domeinCache = getsPerspectivesState(function (v) {
    return v.domeinCache;
});
var domeinCacheInsert = insert(domeinCache);
var domeinCacheLookup = lookup(domeinCache);
var couchdbSessionStarted = getsPerspectivesState(function (v) {
    return v.couchdbSessionStarted;
});
var contextDefinitions = getsPerspectivesState(function (v) {
    return v.contextDefinitions;
});
var contextDefinitionsInsert = insert(contextDefinitions);
var contextDefinitionsLookup = lookup(contextDefinitions);
var clearVar = function (v) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(v))(function (v1) {
        return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v);
    });
};
var replaceAVarContent = function (value) {
    return Control_Bind.composeKleisli(Control_Monad_Aff.bindAff)(clearVar)(Control_Monad_Aff_AVar.putVar(value));
};
var putPerspectivesState = function (state) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getAVarWithPerspectivesState)(function ($28) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(replaceAVarContent(state)($28));
    });
};
var modifyPerspectivesState = function (f) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getPerspectivesState)(function ($29) {
        return putPerspectivesState(f($29));
    });
};
var setCouchdbSessionStarted = function (b) {
    return modifyPerspectivesState(function (ps) {
        var $19 = {};
        for (var $20 in ps) {
            if ({}.hasOwnProperty.call(ps, $20)) {
                $19[$20] = ps[$20];
            };
        };
        $19.couchdbSessionStarted = b;
        return $19;
    });
};
module.exports = {
    newPerspectivesState: newPerspectivesState,
    runPerspectives: runPerspectives,
    runPerspectivesWithState: runPerspectivesWithState,
    getAVarWithPerspectivesState: getAVarWithPerspectivesState,
    getPerspectivesState: getPerspectivesState,
    getsPerspectivesState: getsPerspectivesState,
    putPerspectivesState: putPerspectivesState,
    clearVar: clearVar,
    replaceAVarContent: replaceAVarContent,
    modifyPerspectivesState: modifyPerspectivesState,
    couchdbSessionStarted: couchdbSessionStarted,
    setCouchdbSessionStarted: setCouchdbSessionStarted,
    sessionCookie: sessionCookie,
    takeSessionCookieValue: takeSessionCookieValue,
    readSessionCookieValue: readSessionCookieValue,
    tryReadSessionCookieValue: tryReadSessionCookieValue,
    setSessionCookie: setSessionCookie,
    contextDefinitions: contextDefinitions,
    contextDefinitionsLookup: contextDefinitionsLookup,
    contextDefinitionsInsert: contextDefinitionsInsert,
    rolDefinitions: rolDefinitions,
    rolDefinitionsLookup: rolDefinitionsLookup,
    rolDefinitionsInsert: rolDefinitionsInsert,
    domeinCache: domeinCache,
    domeinCacheLookup: domeinCacheLookup,
    domeinCacheInsert: domeinCacheInsert,
    insert: insert,
    lookup: lookup
};
