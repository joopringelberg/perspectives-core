// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader = require("../Control.Monad.Reader");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_State = require("../Control.Monad.State");
var Control_Monad_State_Class = require("../Control.Monad.State.Class");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_StrMap = require("../Data.StrMap");
var Partial_Unsafe = require("../Partial.Unsafe");
var Perspectives_DomeinFile = require("../Perspectives.DomeinFile");
var Perspectives_Effects = require("../Perspectives.Effects");
var Perspectives_EntiteitAndRDFAliases = require("../Perspectives.EntiteitAndRDFAliases");
var Perspectives_GlobalUnsafeStrMap = require("../Perspectives.GlobalUnsafeStrMap");
var Perspectives_Identifiers = require("../Perspectives.Identifiers");
var Perspectives_Syntax = require("../Perspectives.Syntax");
var Prelude = require("../Prelude");
var TripleRef = function (x) {
    return x;
};
var NamedFunction = (function () {
    function NamedFunction(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    NamedFunction.create = function (value0) {
        return function (value1) {
            return new NamedFunction(value0, value1);
        };
    };
    return NamedFunction;
})();
var Triple = function (x) {
    return x;
};
var TypedTripleGetter = (function () {
    function TypedTripleGetter(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypedTripleGetter.create = function (value0) {
        return function (value1) {
            return new TypedTripleGetter(value0, value1);
        };
    };
    return TypedTripleGetter;
})();
var MissingVariableDeclaration = (function () {
    function MissingVariableDeclaration(value0) {
        this.value0 = value0;
    };
    MissingVariableDeclaration.create = function (value0) {
        return new MissingVariableDeclaration(value0);
    };
    return MissingVariableDeclaration;
})();
var VariableAlreadyDeclaredAs = (function () {
    function VariableAlreadyDeclaredAs(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    VariableAlreadyDeclaredAs.create = function (value0) {
        return function (value1) {
            return new VariableAlreadyDeclaredAs(value0, value1);
        };
    };
    return VariableAlreadyDeclaredAs;
})();
var MissingAspect = (function () {
    function MissingAspect(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MissingAspect.create = function (value0) {
        return function (value1) {
            return new MissingAspect(value0, value1);
        };
    };
    return MissingAspect;
})();
var MissingMogelijkeBinding = (function () {
    function MissingMogelijkeBinding(value0) {
        this.value0 = value0;
    };
    MissingMogelijkeBinding.create = function (value0) {
        return new MissingMogelijkeBinding(value0);
    };
    return MissingMogelijkeBinding;
})();
var MultipleDefinitions = (function () {
    function MultipleDefinitions(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MultipleDefinitions.create = function (value0) {
        return function (value1) {
            return new MultipleDefinitions(value0, value1);
        };
    };
    return MultipleDefinitions;
})();
var MissingUnqualifiedProperty = (function () {
    function MissingUnqualifiedProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MissingUnqualifiedProperty.create = function (value0) {
        return function (value1) {
            return new MissingUnqualifiedProperty(value0, value1);
        };
    };
    return MissingUnqualifiedProperty;
})();
var MissingQualifiedProperty = (function () {
    function MissingQualifiedProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MissingQualifiedProperty.create = function (value0) {
        return function (value1) {
            return new MissingQualifiedProperty(value0, value1);
        };
    };
    return MissingQualifiedProperty;
})();
var MissingQualifiedRol = (function () {
    function MissingQualifiedRol(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MissingQualifiedRol.create = function (value0) {
        return function (value1) {
            return new MissingQualifiedRol(value0, value1);
        };
    };
    return MissingQualifiedRol;
})();
var MissingUnqualifiedRol = (function () {
    function MissingUnqualifiedRol(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MissingUnqualifiedRol.create = function (value0) {
        return function (value1) {
            return new MissingUnqualifiedRol(value0, value1);
        };
    };
    return MissingUnqualifiedRol;
})();
var MissingType = (function () {
    function MissingType(value0) {
        this.value0 = value0;
    };
    MissingType.create = function (value0) {
        return new MissingType(value0);
    };
    return MissingType;
})();
var MissingRolInstance = (function () {
    function MissingRolInstance(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MissingRolInstance.create = function (value0) {
        return function (value1) {
            return new MissingRolInstance(value0, value1);
        };
    };
    return MissingRolInstance;
})();
var IncorrectBinding = (function () {
    function IncorrectBinding(value0, value1, value2, value3, value4) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
    };
    IncorrectBinding.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return new IncorrectBinding(value0, value1, value2, value3, value4);
                    };
                };
            };
        };
    };
    return IncorrectBinding;
})();
var RolNotDefined = (function () {
    function RolNotDefined(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    RolNotDefined.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new RolNotDefined(value0, value1, value2);
            };
        };
    };
    return RolNotDefined;
})();
var MissingPropertyValue = (function () {
    function MissingPropertyValue(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    MissingPropertyValue.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new MissingPropertyValue(value0, value1, value2);
            };
        };
    };
    return MissingPropertyValue;
})();
var IncorrectPropertyValue = (function () {
    function IncorrectPropertyValue(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    IncorrectPropertyValue.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new IncorrectPropertyValue(value0, value1, value2, value3);
                };
            };
        };
    };
    return IncorrectPropertyValue;
})();
var TooManyPropertyValues = (function () {
    function TooManyPropertyValues(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TooManyPropertyValues.create = function (value0) {
        return function (value1) {
            return new TooManyPropertyValues(value0, value1);
        };
    };
    return TooManyPropertyValues;
})();
var PropertyNotDefined = (function () {
    function PropertyNotDefined(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    PropertyNotDefined.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new PropertyNotDefined(value0, value1, value2, value3);
                };
            };
        };
    };
    return PropertyNotDefined;
})();
var AspectRolNotFromAspect = (function () {
    function AspectRolNotFromAspect(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    AspectRolNotFromAspect.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new AspectRolNotFromAspect(value0, value1, value2);
            };
        };
    };
    return AspectRolNotFromAspect;
})();
var CycleInAspects = (function () {
    function CycleInAspects(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CycleInAspects.create = function (value0) {
        return function (value1) {
            return new CycleInAspects(value0, value1);
        };
    };
    return CycleInAspects;
})();
var RolWithoutContext = (function () {
    function RolWithoutContext(value0) {
        this.value0 = value0;
    };
    RolWithoutContext.create = function (value0) {
        return new RolWithoutContext(value0);
    };
    return RolWithoutContext;
})();
var withQueryCompilerEnvironment = function (a) {
    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff))))(function (v) {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(a)(function (v1) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v))(function () {
                return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v1);
            });
        });
    });
};
var typedTripleGetterName = function (v) {
    return v.value0;
};
var tripleObjects_ = function (dictMonad) {
    return function (v) {
        return Control_Applicative.pure(dictMonad.Applicative0())(v.object);
    };
};
var tripleObjects = function (v) {
    return v.object;
};
var tripleObject = function (v) {
    return Data_Maybe.fromJust()(Data_Array.head(v.object));
};
var showUserMessage = new Data_Show.Show(function (v) {
    if (v instanceof MissingVariableDeclaration) {
        return "(MissingVariableDeclaration) De variabele '" + (v.value0 + "' wordt gebruikt voor hij is gedefinieerd.");
    };
    if (v instanceof VariableAlreadyDeclaredAs) {
        return "(VariableAlreadyDeclaredAs) De variabele '" + (v.value0 + ("' is al gedeclareerd als een waarde van het type '" + (v.value1 + "'")));
    };
    if (v instanceof MissingAspect) {
        return "(MissingAspect) Het type '" + (v.value0 + ("' mist het aspect '" + (v.value1 + "'.")));
    };
    if (v instanceof MissingMogelijkeBinding) {
        return "(MissingMogelijkeBinding) Voor Rol '" + (v.value0 + "' is geen mogelijkeBinding gedefinieerd.");
    };
    if (v instanceof MultipleDefinitions) {
        return "(MultipleDefinitions) Elk van de volgende Aspecten heeft een definitie voor '" + (v.value0 + ("': " + Data_Show.show(Data_Show.showArray(Data_Show.showString))(v.value1)));
    };
    if (v instanceof MissingUnqualifiedProperty) {
        return "(MissingUnqualifiedProperty) Er is geen definitie voor de property '" + (v.value0 + ("' voor de rol '" + (v.value1 + "'.")));
    };
    if (v instanceof MissingQualifiedProperty) {
        return "(MissingQualifiedProperty) Er is geen definitie voor de property '" + (v.value0 + ("' voor de rol '" + (v.value1 + "'.")));
    };
    if (v instanceof MissingQualifiedRol) {
        return "(MissingQualifiedRol) Er is geen definitie voor de rol '" + (v.value0 + ("' in de context '" + (v.value1 + "'.")));
    };
    if (v instanceof MissingUnqualifiedRol) {
        return "(MissingUnqualifiedRol) Er is geen definitie voor de rol '" + (v.value0 + ("' in de context '" + (v.value1 + "'.")));
    };
    if (v instanceof MissingType) {
        return "(MissingType) De context '" + (v.value0 + "' heeft geen type.");
    };
    if (v instanceof MissingRolInstance) {
        return "(MissingRolInstance) De verplichte Rol '" + (v.value0 + ("' komt niet voor in de context '" + (v.value1 + "'.")));
    };
    if (v instanceof IncorrectBinding) {
        return "(IncorrectBinding) In de context '" + (v.value0 + ("' is de Rol '" + (v.value1 + ("' gebonden aan '" + (v.value2 + ("'(type: '" + (v.value3 + ("') maar moet worden gebonden aan een instantie van type '" + (v.value4 + "'.")))))))));
    };
    if (v instanceof RolNotDefined) {
        return "(RolNotDefined) De context '" + (v.value1 + ("' heeft een instantie van rol '" + (v.value0 + ("' maar die is niet gedefinieerd voor '" + (v.value2 + "'.")))));
    };
    if (v instanceof MissingPropertyValue) {
        return "(MissingPropertyValue) De verplichte Property '" + (v.value1 + ("' komt niet voor in de rol '" + (v.value2 + ("' van de context '" + (v.value0 + "'.")))));
    };
    if (v instanceof IncorrectPropertyValue) {
        return "(IncorrectPropertyValue) De Property '" + (v.value1 + ("' is gebonden aan de waarde '" + (v.value3 + ("' maar moet worden gebonden aan een waarde van type '" + (v.value2 + ("' (in de context '" + (v.value0 + "').")))))));
    };
    if (v instanceof TooManyPropertyValues) {
        return "(TooManyPropertyValues) De Property '" + (v.value1 + ("' is functioneel maar heeft m\xe9\xe9r dan 1 waarde (in de context '" + (v.value0 + "').")));
    };
    if (v instanceof PropertyNotDefined) {
        return "(PropertyNotDefined) De Rol '" + (v.value2 + ("' van de context '" + (v.value0 + ("' geeft een waarde aan Property '" + (v.value1 + ("' maar die is niet gedefinieerd voor '" + (v.value3 + "'.")))))));
    };
    if (v instanceof AspectRolNotFromAspect) {
        return "(AspectRolNotFromAspect) De Rol '" + (v.value0 + ("' gebruikt de Rol '" + (v.value1 + ("' als aspectrol, maar die is niet beschikbaar in de Aspecten van '" + (v.value2 + "'.")))));
    };
    if (v instanceof CycleInAspects) {
        return "(CycleInAspects) De Context '" + (v.value0 + ("' heeft een Aspect dat (indirect) weer '" + (v.value0 + ("' als Aspect heeft. De betrokken Aspecten zijn: " + (Data_Show.show(Data_Show.showArray(Data_Show.showString))(v.value1) + ".")))));
    };
    if (v instanceof RolWithoutContext) {
        return "(RolWithoutContext) De Rol '" + (v.value0 + "' heeft geen defini\xebrende Context.");
    };
    throw new Error("Failed pattern match at Perspectives.CoreTypes line 266, column 1 - line 266, column 45: " + [ v.constructor.name ]);
});
var showTripleRef = new Data_Show.Show(function (v) {
    return "{" + (Data_Show.show(Data_Show.showString)(v.subject) + (", " + (Data_Show.show(Data_Show.showString)(v.predicate) + "}")));
});
var showTriple = new Data_Show.Show(function (v) {
    return "<" + (Data_Show.show(Data_Show.showString)(v.subject) + (";" + (Data_Show.show(Data_Show.showString)(v.predicate) + (";" + (Data_Show.show(Data_Show.showArray(Data_Show.showString))(v.object) + ">")))));
});
var runMonadPerspectivesQueryCompiler = function (domainId) {
    return function (a) {
        return Control_Monad_State_Trans.evalStateT(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Aff.functorAff))(a)({
            domain: domainId,
            declaredVariables: Data_StrMap.empty
        });
    };
};
var readQueryVariable = function ($$var) {
    return Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(function (env) {
        return Data_Maybe.fromJust()(Data_StrMap.lookup($$var)(env));
    });
};
var putQueryVariableType = function ($$var) {
    return function (typeId) {
        return Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(function (v) {
            var $94 = {};
            for (var $95 in v) {
                if ({}.hasOwnProperty.call(v, $95)) {
                    $94[$95] = v[$95];
                };
            };
            $94.declaredVariables = Data_StrMap.insert($$var)(typeId)(v.declaredVariables);
            return $94;
        });
    };
};
var putQueryVariable = function ($$var) {
    return function (t) {
        return Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(function (env) {
            return Data_StrMap.insert($$var)(t)(env);
        });
    };
};
var putQueryStepDomain = function (d) {
    return Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(function (env) {
        var $98 = {};
        for (var $99 in env) {
            if ({}.hasOwnProperty.call(env, $99)) {
                $98[$99] = env[$99];
            };
        };
        $98.domain = d;
        return $98;
    });
};
var mtripleObject = function ($139) {
    return Data_Array.head(tripleObjects($139));
};
var getQueryVariableType = function ($$var) {
    return Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(function (v) {
        return Data_StrMap.lookup($$var)(v.declaredVariables);
    });
};
var getQueryStepDomain = Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(function (v) {
    return v.domain;
});
var eqTripleRef = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.subject === v1.subject && v.predicate === v1.predicate;
    };
});
var eqTriple = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.subject === v1.subject && v.predicate === v1.predicate;
    };
});
var applyTypedTripleGetterToObjects = function (a) {
    return function (v) {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v.value1(a))(function ($140) {
            return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(tripleObjects($140));
        });
    };
};
var applyTypedTripleGetterToObject = function (a) {
    return function (v) {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v.value1(a))(function (v1) {
            var v2 = Data_Array.head(v1.object);
            if (v2 instanceof Data_Maybe.Nothing) {
                return Control_Monad_Error_Class.throwError(Control_Monad_State_Trans.monadThrowStateT(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff)))(Control_Monad_Eff_Exception.error("TypedTripleGetter '" + (v.value0 + ("' returns no values for '" + (a + "'.")))));
            };
            if (v2 instanceof Data_Maybe.Just) {
                return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v2.value0);
            };
            throw new Error("Failed pattern match at Perspectives.CoreTypes line 219, column 3 - line 221, column 27: " + [ v2.constructor.name ]);
        });
    };
};
var applyTypedTripleGetterToMaybeObject = function (a) {
    return function (v) {
        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v.value1(a))(function ($141) {
            return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Data_Array.head(tripleObjects($141)));
        });
    };
};
var applyTypedTripleGetter = function (a) {
    return function (v) {
        return v.value1(a);
    };
};
var applyObjectsGetterToObject = function (id) {
    return function (g) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(g(id))(function (objs) {
            var v = Data_Array.head(objs);
            if (v instanceof Data_Maybe.Nothing) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Control_Monad_Eff_Exception.error("ObjectsGetter returns no values for '" + (id + "'.")));
            };
            if (v instanceof Data_Maybe.Just) {
                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(v.value0);
            };
            throw new Error("Failed pattern match at Perspectives.CoreTypes line 134, column 3 - line 136, column 27: " + [ v.constructor.name ]);
        });
    };
};
var applyObjectsGetterToMaybeObject = function (id) {
    return function (g) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(g(id))(function ($142) {
            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Array.head($142));
        });
    };
};
var applyObjectsGetter = function (id) {
    return function (g) {
        return g(id);
    };
};
module.exports = {
    putQueryVariable: putQueryVariable,
    readQueryVariable: readQueryVariable,
    runMonadPerspectivesQueryCompiler: runMonadPerspectivesQueryCompiler,
    putQueryStepDomain: putQueryStepDomain,
    getQueryStepDomain: getQueryStepDomain,
    putQueryVariableType: putQueryVariableType,
    getQueryVariableType: getQueryVariableType,
    withQueryCompilerEnvironment: withQueryCompilerEnvironment,
    applyObjectsGetter: applyObjectsGetter,
    applyObjectsGetterToMaybeObject: applyObjectsGetterToMaybeObject,
    applyObjectsGetterToObject: applyObjectsGetterToObject,
    NamedFunction: NamedFunction,
    Triple: Triple,
    tripleObjects: tripleObjects,
    tripleObjects_: tripleObjects_,
    mtripleObject: mtripleObject,
    tripleObject: tripleObject,
    TypedTripleGetter: TypedTripleGetter,
    typedTripleGetterName: typedTripleGetterName,
    applyTypedTripleGetter: applyTypedTripleGetter,
    applyTypedTripleGetterToObjects: applyTypedTripleGetterToObjects,
    applyTypedTripleGetterToMaybeObject: applyTypedTripleGetterToMaybeObject,
    applyTypedTripleGetterToObject: applyTypedTripleGetterToObject,
    TripleRef: TripleRef,
    MissingVariableDeclaration: MissingVariableDeclaration,
    VariableAlreadyDeclaredAs: VariableAlreadyDeclaredAs,
    MissingAspect: MissingAspect,
    MissingMogelijkeBinding: MissingMogelijkeBinding,
    MultipleDefinitions: MultipleDefinitions,
    MissingUnqualifiedProperty: MissingUnqualifiedProperty,
    MissingQualifiedProperty: MissingQualifiedProperty,
    MissingQualifiedRol: MissingQualifiedRol,
    MissingUnqualifiedRol: MissingUnqualifiedRol,
    MissingType: MissingType,
    MissingRolInstance: MissingRolInstance,
    IncorrectBinding: IncorrectBinding,
    RolNotDefined: RolNotDefined,
    MissingPropertyValue: MissingPropertyValue,
    IncorrectPropertyValue: IncorrectPropertyValue,
    TooManyPropertyValues: TooManyPropertyValues,
    PropertyNotDefined: PropertyNotDefined,
    AspectRolNotFromAspect: AspectRolNotFromAspect,
    CycleInAspects: CycleInAspects,
    RolWithoutContext: RolWithoutContext,
    showTriple: showTriple,
    eqTriple: eqTriple,
    eqTripleRef: eqTripleRef,
    showTripleRef: showTripleRef,
    showUserMessage: showUserMessage
};
