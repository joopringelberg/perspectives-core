// Generated by purs version 0.11.7
"use strict";
var Perspectives_EntiteitAndRDFAliases = require("../Perspectives.EntiteitAndRDFAliases");
var UnqualifiedRol = (function () {
    function UnqualifiedRol(value0) {
        this.value0 = value0;
    };
    UnqualifiedRol.create = function (value0) {
        return new UnqualifiedRol(value0);
    };
    return UnqualifiedRol;
})();
var QualifiedRol = (function () {
    function QualifiedRol(value0) {
        this.value0 = value0;
    };
    QualifiedRol.create = function (value0) {
        return new QualifiedRol(value0);
    };
    return QualifiedRol;
})();
var UnqualifiedProperty = (function () {
    function UnqualifiedProperty(value0) {
        this.value0 = value0;
    };
    UnqualifiedProperty.create = function (value0) {
        return new UnqualifiedProperty(value0);
    };
    return UnqualifiedProperty;
})();
var QualifiedProperty = (function () {
    function QualifiedProperty(value0) {
        this.value0 = value0;
    };
    QualifiedProperty.create = function (value0) {
        return new QualifiedProperty(value0);
    };
    return QualifiedProperty;
})();
var UnqualifiedExternalProperty = (function () {
    function UnqualifiedExternalProperty(value0) {
        this.value0 = value0;
    };
    UnqualifiedExternalProperty.create = function (value0) {
        return new UnqualifiedExternalProperty(value0);
    };
    return UnqualifiedExternalProperty;
})();
var QualifiedExternalProperty = (function () {
    function QualifiedExternalProperty(value0) {
        this.value0 = value0;
    };
    QualifiedExternalProperty.create = function (value0) {
        return new QualifiedExternalProperty(value0);
    };
    return QualifiedExternalProperty;
})();
var UnqualifiedInternalProperty = (function () {
    function UnqualifiedInternalProperty(value0) {
        this.value0 = value0;
    };
    UnqualifiedInternalProperty.create = function (value0) {
        return new UnqualifiedInternalProperty(value0);
    };
    return UnqualifiedInternalProperty;
})();
var QualifiedInternalProperty = (function () {
    function QualifiedInternalProperty(value0) {
        this.value0 = value0;
    };
    QualifiedInternalProperty.create = function (value0) {
        return new QualifiedInternalProperty(value0);
    };
    return QualifiedInternalProperty;
})();
var Constant = (function () {
    function Constant(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Constant.create = function (value0) {
        return function (value1) {
            return new Constant(value0, value1);
        };
    };
    return Constant;
})();
var RolesOf = (function () {
    function RolesOf(value0) {
        this.value0 = value0;
    };
    RolesOf.create = function (value0) {
        return new RolesOf(value0);
    };
    return RolesOf;
})();
var Variable = (function () {
    function Variable(value0) {
        this.value0 = value0;
    };
    Variable.create = function (value0) {
        return new Variable(value0);
    };
    return Variable;
})();
var Binding = (function () {
    function Binding() {

    };
    Binding.value = new Binding();
    return Binding;
})();
var Context = (function () {
    function Context() {

    };
    Context.value = new Context();
    return Context;
})();
var Identity = (function () {
    function Identity() {

    };
    Identity.value = new Identity();
    return Identity;
})();
var Type = (function () {
    function Type() {

    };
    Type.value = new Type();
    return Type;
})();
var BuitenRol = (function () {
    function BuitenRol() {

    };
    BuitenRol.value = new BuitenRol();
    return BuitenRol;
})();
var IedereRolInContext = (function () {
    function IedereRolInContext() {

    };
    IedereRolInContext.value = new IedereRolInContext();
    return IedereRolInContext;
})();
var RolTypen = (function () {
    function RolTypen() {

    };
    RolTypen.value = new RolTypen();
    return RolTypen;
})();
var Label = (function () {
    function Label() {

    };
    Label.value = new Label();
    return Label;
})();
var Filter = (function () {
    function Filter(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Filter.create = function (value0) {
        return function (value1) {
            return new Filter(value0, value1);
        };
    };
    return Filter;
})();
var Concat = (function () {
    function Concat(value0) {
        this.value0 = value0;
    };
    Concat.create = function (value0) {
        return new Concat(value0);
    };
    return Concat;
})();
var Compose = (function () {
    function Compose(value0) {
        this.value0 = value0;
    };
    Compose.create = function (value0) {
        return new Compose(value0);
    };
    return Compose;
})();
var NotEmpty = (function () {
    function NotEmpty(value0) {
        this.value0 = value0;
    };
    NotEmpty.create = function (value0) {
        return new NotEmpty(value0);
    };
    return NotEmpty;
})();
var Closure = (function () {
    function Closure(value0) {
        this.value0 = value0;
    };
    Closure.create = function (value0) {
        return new Closure(value0);
    };
    return Closure;
})();
var Closure$prime = (function () {
    function Closure$prime(value0) {
        this.value0 = value0;
    };
    Closure$prime.create = function (value0) {
        return new Closure$prime(value0);
    };
    return Closure$prime;
})();
var LastElement = (function () {
    function LastElement(value0) {
        this.value0 = value0;
    };
    LastElement.create = function (value0) {
        return new LastElement(value0);
    };
    return LastElement;
})();
var UseCache = (function () {
    function UseCache(value0) {
        this.value0 = value0;
    };
    UseCache.create = function (value0) {
        return new UseCache(value0);
    };
    return UseCache;
})();
var IgnoreCache = (function () {
    function IgnoreCache(value0) {
        this.value0 = value0;
    };
    IgnoreCache.create = function (value0) {
        return new IgnoreCache(value0);
    };
    return IgnoreCache;
})();
var Contains = (function () {
    function Contains(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Contains.create = function (value0) {
        return function (value1) {
            return new Contains(value0, value1);
        };
    };
    return Contains;
})();
var SetVariable = (function () {
    function SetVariable(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SetVariable.create = function (value0) {
        return function (value1) {
            return new SetVariable(value0, value1);
        };
    };
    return SetVariable;
})();
var Terminal = (function () {
    function Terminal(value0) {
        this.value0 = value0;
    };
    Terminal.create = function (value0) {
        return new Terminal(value0);
    };
    return Terminal;
})();
module.exports = {
    Filter: Filter,
    Concat: Concat,
    Compose: Compose,
    NotEmpty: NotEmpty,
    Closure: Closure,
    "Closure'": Closure$prime,
    LastElement: LastElement,
    UseCache: UseCache,
    IgnoreCache: IgnoreCache,
    Contains: Contains,
    SetVariable: SetVariable,
    Terminal: Terminal,
    UnqualifiedRol: UnqualifiedRol,
    QualifiedRol: QualifiedRol,
    UnqualifiedProperty: UnqualifiedProperty,
    QualifiedProperty: QualifiedProperty,
    UnqualifiedExternalProperty: UnqualifiedExternalProperty,
    QualifiedExternalProperty: QualifiedExternalProperty,
    UnqualifiedInternalProperty: UnqualifiedInternalProperty,
    QualifiedInternalProperty: QualifiedInternalProperty,
    Constant: Constant,
    RolesOf: RolesOf,
    Variable: Variable,
    Binding: Binding,
    Context: Context,
    Identity: Identity,
    Type: Type,
    BuitenRol: BuitenRol,
    IedereRolInContext: IedereRolInContext,
    RolTypen: RolTypen,
    Label: Label
};
