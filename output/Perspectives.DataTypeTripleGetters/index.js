// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_DataTypeObjectGetters = require("../Perspectives.DataTypeObjectGetters");
var Perspectives_TripleGetterConstructors = require("../Perspectives.TripleGetterConstructors");
var Prelude = require("../Prelude");
var typeVanIedereRolInContextM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$typeVanIedereRolInContext")(Perspectives_DataTypeObjectGetters.typeVanIedereRolInContext);
var rolTypeM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$type")(Perspectives_DataTypeObjectGetters.rolType);
var labelM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$label")(Perspectives_DataTypeObjectGetters.label);
var iedereRolInContextM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$iedereRolInContext")(Perspectives_DataTypeObjectGetters.iedereRolInContext);
var identity = function (x) {
    return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))([ x ]);
};
var identityM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$identity")(identity);
var contextTypeM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$type")(Perspectives_DataTypeObjectGetters.contextType);
var contextM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$context")(Perspectives_DataTypeObjectGetters.context);
var buitenRolM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$buitenRol")(Perspectives_DataTypeObjectGetters.buitenRol);
var bindingM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$binding")(Perspectives_DataTypeObjectGetters.binding);
module.exports = {
    identity: identity,
    identityM: identityM,
    contextTypeM: contextTypeM,
    rolTypeM: rolTypeM,
    buitenRolM: buitenRolM,
    iedereRolInContextM: iedereRolInContextM,
    typeVanIedereRolInContextM: typeVanIedereRolInContextM,
    bindingM: bindingM,
    contextM: contextM,
    labelM: labelM
};
