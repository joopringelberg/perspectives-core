// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Data_Array = require("../Data.Array");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Partial_Unsafe = require("../Partial.Unsafe");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_Effects = require("../Perspectives.Effects");
var Perspectives_EntiteitAndRDFAliases = require("../Perspectives.EntiteitAndRDFAliases");
var Perspectives_PerspectEntiteit = require("../Perspectives.PerspectEntiteit");
var Perspectives_ResourceRetrieval = require("../Perspectives.ResourceRetrieval");
var Prelude = require("../Prelude");
var getPerspectEntiteit = function (dictPerspectEntiteit) {
    return function (id) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectEntiteit.retrieveInternally(dictPerspectEntiteit)(id))(function (v) {
            if (v instanceof Data_Maybe.Just) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.readVar(v.value0)))(function (v1) {
                    return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(v1);
                });
            };
            if (v instanceof Data_Maybe.Nothing) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_ResourceRetrieval.fetchPerspectEntiteitFromCouchdb(dictPerspectEntiteit)(id))(function (v1) {
                    return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(v1);
                });
            };
            throw new Error("Failed pattern match at Perspectives.Resource line 21, column 5 - line 27, column 17: " + [ v.constructor.name ]);
        });
    };
};
var getAVarRepresentingPerspectEntiteit = function (dictPerspectEntiteit) {
    return function (id) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectEntiteit.retrieveInternally(dictPerspectEntiteit)(id))(function (v) {
            if (v instanceof Data_Maybe.Just) {
                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(v.value0);
            };
            if (v instanceof Data_Maybe.Nothing) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_ResourceRetrieval.fetchPerspectEntiteitFromCouchdb(dictPerspectEntiteit)(id))(function (v1) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectEntiteit.retrieveInternally(dictPerspectEntiteit)(id))(function (v2) {
                        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Maybe.fromJust()(v2));
                    });
                });
            };
            throw new Error("Failed pattern match at Perspectives.Resource line 33, column 5 - line 38, column 46: " + [ v.constructor.name ]);
        });
    };
};
var entiteitType = function (dictPerspectEntiteit) {
    return function (id) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getPerspectEntiteit(dictPerspectEntiteit)(id))(function (v) {
            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Array.singleton(Perspectives_PerspectEntiteit.getType(dictPerspectEntiteit)(v)));
        });
    };
};
module.exports = {
    getPerspectEntiteit: getPerspectEntiteit,
    getAVarRepresentingPerspectEntiteit: getAVarRepresentingPerspectEntiteit,
    entiteitType: entiteitType
};
