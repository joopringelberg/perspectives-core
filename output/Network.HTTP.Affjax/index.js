// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_Compat = require("../Control.Monad.Aff.Compat");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Ref = require("../Control.Monad.Eff.Ref");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Parallel = require("../Control.Parallel");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Argonaut_Parser = require("../Data.Argonaut.Parser");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Functor = require("../Data.Functor");
var Data_HTTP_Method = require("../Data.HTTP.Method");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Identity = require("../Data.Identity");
var Data_Int = require("../Data.Int");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_Nullable = require("../Data.Nullable");
var Data_Ring = require("../Data.Ring");
var Data_Semiring = require("../Data.Semiring");
var Data_Show = require("../Data.Show");
var Data_Time_Duration = require("../Data.Time.Duration");
var Data_Tuple = require("../Data.Tuple");
var $$Math = require("../Math");
var Network_HTTP_Affjax_Request = require("../Network.HTTP.Affjax.Request");
var Network_HTTP_Affjax_Response = require("../Network.HTTP.Affjax.Response");
var Network_HTTP_RequestHeader = require("../Network.HTTP.RequestHeader");
var Network_HTTP_ResponseHeader = require("../Network.HTTP.ResponseHeader");
var Network_HTTP_StatusCode = require("../Network.HTTP.StatusCode");
var Prelude = require("../Prelude");
var retry = function (dictRequestable) {
    return function (policy) {
        return function (run) {
            return function (req) {
                var retryState = function (v) {
                    if (v instanceof Data_Either.Left) {
                        return Data_Either.Left.create(new Data_Either.Left(v.value0));
                    };
                    if (v instanceof Data_Either.Right) {
                        if (v.value0.status === 200) {
                            return new Data_Either.Right(v.value0);
                        };
                        var $45 = policy.shouldRetryWithStatusCode(v.value0.status);
                        if ($45) {
                            return Data_Either.Left.create(new Data_Either.Right(v.value0));
                        };
                        return new Data_Either.Right(v.value0);
                    };
                    throw new Error("Failed pattern match at Network.HTTP.Affjax line 201, column 5 - line 203, column 45: " + [ v.constructor.name ]);
                };
                var go = function (failureRef) {
                    return function (n) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Data_Functor.map(Control_Monad_Aff.functorAff)(retryState)(Control_Monad_Error_Class["try"](Control_Monad_Aff.monadErrorAff)(run(req))))(function (v) {
                            if (v instanceof Data_Either.Left) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(failureRef)(new Data_Maybe.Just(v.value0))))(function () {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Aff.bindAff)(Control_Monad_Aff.delay(policy.delayCurve(n)))(function () {
                                        return go(failureRef)(n + 1 | 0);
                                    });
                                });
                            };
                            if (v instanceof Data_Either.Right) {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v.value0);
                            };
                            throw new Error("Failed pattern match at Network.HTTP.Affjax line 216, column 7 - line 221, column 32: " + [ v.constructor.name ]);
                        });
                    };
                };
                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)))(function (v) {
                    var loop = go(v);
                    if (policy.timeout instanceof Data_Maybe.Nothing) {
                        return loop(1);
                    };
                    if (policy.timeout instanceof Data_Maybe.Just) {
                        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Parallel.parOneOf(Control_Monad_Aff.parallelAff)(Control_Monad_Aff.alternativeParAff)(Data_Foldable.foldableArray)(Data_Functor.functorArray)([ Data_Functor.map(Control_Monad_Aff.functorAff)(Data_Maybe.Just.create)(loop(1)), Data_Functor.voidRight(Control_Monad_Aff.functorAff)(Data_Maybe.Nothing.value)(Control_Monad_Aff.delay(policy.timeout.value0)) ]))(function (v1) {
                            if (v1 instanceof Data_Maybe.Nothing) {
                                return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v)))(function (v2) {
                                    if (v2 instanceof Data_Maybe.Nothing) {
                                        return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error("Timeout"));
                                    };
                                    if (v2 instanceof Data_Maybe.Just) {
                                        return Data_Either.either(Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff))(v2.value0);
                                    };
                                    throw new Error("Failed pattern match at Network.HTTP.Affjax line 196, column 11 - line 198, column 61: " + [ v2.constructor.name ]);
                                });
                            };
                            if (v1 instanceof Data_Maybe.Just) {
                                return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1.value0);
                            };
                            throw new Error("Failed pattern match at Network.HTTP.Affjax line 193, column 7 - line 199, column 31: " + [ v1.constructor.name ]);
                        });
                    };
                    throw new Error("Failed pattern match at Network.HTTP.Affjax line 189, column 3 - line 199, column 31: " + [ policy.timeout.constructor.name ]);
                });
            };
        };
    };
};
var defaultRetryPolicy = {
    timeout: Data_Maybe.Nothing.value,
    delayCurve: function (n) {
        return Data_Time_Duration.Milliseconds($$Math.max(30.0 * 1000.0)(100.0 * $$Math.pow(2.0)(Data_Int.toNumber(n - 1 | 0))));
    },
    shouldRetryWithStatusCode: Data_Function["const"](false)
};
var defaultRequest = {
    method: new Data_Either.Left(Data_HTTP_Method.GET.value),
    url: "/",
    headers: [  ],
    content: Data_Maybe.Nothing.value,
    username: Data_Maybe.Nothing.value,
    password: Data_Maybe.Nothing.value,
    withCredentials: false
};
var affjax = function (dictRequestable) {
    return function (dictRespondable) {
        return function (req) {
            var responseSettings = Network_HTTP_Affjax_Response.responseType(dictRespondable);
            var requestSettings = (function () {
                var v = Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_Affjax_Request.toRequest(dictRequestable))(req.content);
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Data_Maybe.Nothing.value);
                };
                if (v instanceof Data_Maybe.Just) {
                    return new Data_Tuple.Tuple(v.value0.value0, new Data_Maybe.Just(v.value0.value1));
                };
                throw new Error("Failed pattern match at Network.HTTP.Affjax line 250, column 21 - line 252, column 49: " + [ v.constructor.name ]);
            })();
            var parseJSON = function ($98) {
                return Data_Either.either(function ($99) {
                    return Data_Foreign.fail(Data_Foreign.JSONError.create($99));
                })(function ($100) {
                    return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Foreign.toForeign($100));
                })(Data_Argonaut_Parser.jsonParser($98));
            };
            var fromResponse$prime = (function () {
                var v = Data_Tuple.snd(responseSettings);
                if (v instanceof Network_HTTP_Affjax_Response.JSONResponse) {
                    return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Network_HTTP_Affjax_Response.fromResponse(dictRespondable))(Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(parseJSON)(Data_Foreign.readString));
                };
                return Network_HTTP_Affjax_Response.fromResponse(dictRespondable);
            })();
            var addHeader = function (mh) {
                return function (hs) {
                    if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Network_HTTP_RequestHeader.requestHeaderName)(mh.value0))(hs)) {
                        return Data_Array.snoc(hs)(mh.value0);
                    };
                    return hs;
                };
            };
            var headers = addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.ContentType.create)(Data_Tuple.fst(requestSettings)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Network_HTTP_RequestHeader.Accept.create)(Data_Tuple.fst(responseSettings)))(req.headers));
            var req$prime = {
                method: Data_HTTP_Method.print(req.method),
                url: req.url,
                headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                    return {
                        field: Network_HTTP_RequestHeader.requestHeaderName(h),
                        value: Network_HTTP_RequestHeader.requestHeaderValue(h)
                    };
                })(headers),
                content: Data_Nullable.toNullable(Data_Tuple.snd(requestSettings)),
                responseType: Network_HTTP_Affjax_Response.responseTypeToString(Data_Tuple.snd(responseSettings)),
                username: Data_Nullable.toNullable(req.username),
                password: Data_Nullable.toNullable(req.password),
                withCredentials: req.withCredentials
            };
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_Compat.fromEffFnAff($foreign._ajax(Network_HTTP_ResponseHeader.responseHeader, req$prime)))(function (v) {
                var v1 = Data_Functor.map(Data_Either.functorEither)(function (v2) {
                    var $68 = {};
                    for (var $69 in v) {
                        if ({}.hasOwnProperty.call(v, $69)) {
                            $68[$69] = v[$69];
                        };
                    };
                    $68.response = v2;
                    return $68;
                })(Control_Monad_Except.runExcept(fromResponse$prime(v.response)));
                if (v1 instanceof Data_Either.Left) {
                    return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(Control_Monad_Eff_Exception.error(Data_Show.show(Data_List_Types.showNonEmptyList(Data_Foreign.showForeignError))(v1.value0)));
                };
                if (v1 instanceof Data_Either.Right) {
                    return Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v1.value0);
                };
                throw new Error("Failed pattern match at Network.HTTP.Affjax line 232, column 3 - line 234, column 28: " + [ v1.constructor.name ]);
            });
        };
    };
};
var $$delete = function (dictRespondable) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(dictRespondable)((function () {
            var $74 = {};
            for (var $75 in defaultRequest) {
                if ({}.hasOwnProperty.call(defaultRequest, $75)) {
                    $74[$75] = defaultRequest[$75];
                };
            };
            $74.method = new Data_Either.Left(Data_HTTP_Method.DELETE.value);
            $74.url = u;
            return $74;
        })());
    };
};
var delete_ = $$delete(Network_HTTP_Affjax_Response.responsableUnit);
var get = function (dictRespondable) {
    return function (u) {
        return affjax(Network_HTTP_Affjax_Request.requestableUnit)(dictRespondable)((function () {
            var $77 = {};
            for (var $78 in defaultRequest) {
                if ({}.hasOwnProperty.call(defaultRequest, $78)) {
                    $77[$78] = defaultRequest[$78];
                };
            };
            $77.url = u;
            return $77;
        })());
    };
};
var patch = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $80 = {};
                    for (var $81 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $81)) {
                            $80[$81] = defaultRequest[$81];
                        };
                    };
                    $80.method = new Data_Either.Left(Data_HTTP_Method.PATCH.value);
                    $80.url = u;
                    $80.content = new Data_Maybe.Just(c);
                    return $80;
                })());
            };
        };
    };
};
var patch_ = function (dictRequestable) {
    return patch(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var patch$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $83 = {};
                    for (var $84 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $84)) {
                            $83[$84] = defaultRequest[$84];
                        };
                    };
                    $83.method = new Data_Either.Left(Data_HTTP_Method.PATCH.value);
                    $83.url = u;
                    $83.content = c;
                    return $83;
                })());
            };
        };
    };
};
var patch_$prime = function (dictRequestable) {
    return patch$prime(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var post = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $86 = {};
                    for (var $87 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $87)) {
                            $86[$87] = defaultRequest[$87];
                        };
                    };
                    $86.method = new Data_Either.Left(Data_HTTP_Method.POST.value);
                    $86.url = u;
                    $86.content = new Data_Maybe.Just(c);
                    return $86;
                })());
            };
        };
    };
};
var post_ = function (dictRequestable) {
    return post(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var post$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $89 = {};
                    for (var $90 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $90)) {
                            $89[$90] = defaultRequest[$90];
                        };
                    };
                    $89.method = new Data_Either.Left(Data_HTTP_Method.POST.value);
                    $89.url = u;
                    $89.content = c;
                    return $89;
                })());
            };
        };
    };
};
var post_$prime = function (dictRequestable) {
    return post$prime(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var put = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $92 = {};
                    for (var $93 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $93)) {
                            $92[$93] = defaultRequest[$93];
                        };
                    };
                    $92.method = new Data_Either.Left(Data_HTTP_Method.PUT.value);
                    $92.url = u;
                    $92.content = new Data_Maybe.Just(c);
                    return $92;
                })());
            };
        };
    };
};
var put_ = function (dictRequestable) {
    return put(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
var put$prime = function (dictRequestable) {
    return function (dictRespondable) {
        return function (u) {
            return function (c) {
                return affjax(dictRequestable)(dictRespondable)((function () {
                    var $95 = {};
                    for (var $96 in defaultRequest) {
                        if ({}.hasOwnProperty.call(defaultRequest, $96)) {
                            $95[$96] = defaultRequest[$96];
                        };
                    };
                    $95.method = new Data_Either.Left(Data_HTTP_Method.PUT.value);
                    $95.url = u;
                    $95.content = c;
                    return $95;
                })());
            };
        };
    };
};
var put_$prime = function (dictRequestable) {
    return put$prime(dictRequestable)(Network_HTTP_Affjax_Response.responsableUnit);
};
module.exports = {
    defaultRequest: defaultRequest,
    affjax: affjax,
    get: get,
    post: post,
    post_: post_,
    "post'": post$prime,
    "post_'": post_$prime,
    put: put,
    put_: put_,
    "put'": put$prime,
    "put_'": put_$prime,
    "delete": $$delete,
    delete_: delete_,
    patch: patch,
    patch_: patch_,
    "patch'": patch$prime,
    "patch_'": patch_$prime,
    defaultRetryPolicy: defaultRetryPolicy,
    retry: retry
};
