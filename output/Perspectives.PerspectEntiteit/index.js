// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Foreign_Class = require("../Data.Foreign.Class");
var Data_Foreign_Generic = require("../Data.Foreign.Generic");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Network_HTTP_Affjax_Response = require("../Network.HTTP.Affjax.Response");
var Perspectives_ContextAndRole = require("../Perspectives.ContextAndRole");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_DomeinCache = require("../Perspectives.DomeinCache");
var Perspectives_DomeinFile = require("../Perspectives.DomeinFile");
var Perspectives_Effects = require("../Perspectives.Effects");
var Perspectives_EntiteitAndRDFAliases = require("../Perspectives.EntiteitAndRDFAliases");
var Perspectives_Identifiers = require("../Perspectives.Identifiers");
var Perspectives_PerspectivesState = require("../Perspectives.PerspectivesState");
var Perspectives_Syntax = require("../Perspectives.Syntax");
var Prelude = require("../Prelude");
var PerspectEntiteit = function (Decode1, Encode0, Respondable2, cacheInDomeinFile, decode, encode, getId, getRevision$prime, getType, representInternally, retrieveFromDomein, retrieveInternally, setRevision, setRevision$prime, setType) {
    this.Decode1 = Decode1;
    this.Encode0 = Encode0;
    this.Respondable2 = Respondable2;
    this.cacheInDomeinFile = cacheInDomeinFile;
    this.decode = decode;
    this.encode = encode;
    this.getId = getId;
    this["getRevision'"] = getRevision$prime;
    this.getType = getType;
    this.representInternally = representInternally;
    this.retrieveFromDomein = retrieveFromDomein;
    this.retrieveInternally = retrieveInternally;
    this.setRevision = setRevision;
    this["setRevision'"] = setRevision$prime;
    this.setType = setType;
};
var setType = function (dict) {
    return dict.setType;
};
var setRevision$prime = function (dict) {
    return dict["setRevision'"];
};
var setRevision = function (dict) {
    return dict.setRevision;
};
var retrieveInternally = function (dict) {
    return dict.retrieveInternally;
};
var retrieveFromDomein = function (dict) {
    return dict.retrieveFromDomein;
};
var representInternally = function (dict) {
    return dict.representInternally;
};
var readEntiteitFromCache = function (dictPerspectEntiteit) {
    return function (id) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(retrieveInternally(dictPerspectEntiteit)(id))(function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Control_Monad_Eff_Exception.error("readEntiteitFromCache needs a locally stored resource for " + id));
            };
            if (v instanceof Data_Maybe.Just) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.isEmptyVar(v.value0)))(function (v1) {
                    if (v1) {
                        return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Control_Monad_Eff_Exception.error("readEntiteitFromCache found an empty AVar for " + id));
                    };
                    return Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.readVar(v.value0));
                });
            };
            throw new Error("Failed pattern match at Perspectives.PerspectEntiteit line 127, column 3 - line 133, column 32: " + [ v.constructor.name ]);
        });
    };
};
var perspectEntiteitRol = new PerspectEntiteit(function () {
    return Perspectives_Syntax.decodePerspectRol;
}, function () {
    return Perspectives_Syntax.encodePerspectRol;
}, function () {
    return Perspectives_Syntax.respondablePerspectRol;
}, function (ns) {
    return function (c) {
        return Perspectives_DomeinCache.modifyDomeinFileInCache(ns)(Perspectives_DomeinFile.addRolToDomeinFile(c));
    };
}, function ($41) {
    return Control_Monad_Except.runExcept(Data_Foreign_Generic.decodeJSON(Perspectives_Syntax.decodePerspectRol)($41));
}, Data_Foreign_Generic.encodeJSON(Perspectives_Syntax.encodePerspectRol), Perspectives_ContextAndRole.rol_id, Perspectives_ContextAndRole["rol_rev'"], Perspectives_ContextAndRole.rol_pspType, function (c) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.makeEmptyVar))(Perspectives_PerspectivesState.rolDefinitionsInsert(c));
}, Perspectives_DomeinCache.retrieveRolFromDomein, Perspectives_PerspectivesState.rolDefinitionsLookup, Perspectives_ContextAndRole.changeRol_rev, Perspectives_ContextAndRole["changeRol_rev'"], Perspectives_ContextAndRole.changeRol_type);
var perspectEntiteitContext = new PerspectEntiteit(function () {
    return Perspectives_Syntax.decodePerspectContext;
}, function () {
    return Perspectives_Syntax.encodePerspectContext;
}, function () {
    return Perspectives_Syntax.respondablePerspectContext;
}, function (ns) {
    return function (c) {
        return Perspectives_DomeinCache.modifyDomeinFileInCache(ns)(Perspectives_DomeinFile.addContextToDomeinFile(c));
    };
}, function ($42) {
    return Control_Monad_Except.runExcept(Data_Foreign_Generic.decodeJSON(Perspectives_Syntax.decodePerspectContext)($42));
}, Data_Foreign_Generic.encodeJSON(Perspectives_Syntax.encodePerspectContext), Perspectives_ContextAndRole.context_id, Perspectives_ContextAndRole["context_rev'"], Perspectives_ContextAndRole.context_pspType, function (c) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.makeEmptyVar))(Perspectives_PerspectivesState.contextDefinitionsInsert(c));
}, Perspectives_DomeinCache.retrieveContextFromDomein, Perspectives_PerspectivesState.contextDefinitionsLookup, Perspectives_ContextAndRole.changeContext_rev, Perspectives_ContextAndRole["changeContext_rev'"], Perspectives_ContextAndRole.changeContext_type);
var getType = function (dict) {
    return dict.getType;
};
var getRevision$prime = function (dict) {
    return dict["getRevision'"];
};
var getId = function (dict) {
    return dict.getId;
};
var ensureInternalRepresentation = function (dictPerspectEntiteit) {
    return function (c) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(retrieveInternally(dictPerspectEntiteit)(c))(function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return representInternally(dictPerspectEntiteit)(c);
            };
            if (v instanceof Data_Maybe.Just) {
                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(v.value0);
            };
            throw new Error("Failed pattern match at Perspectives.PerspectEntiteit line 72, column 5 - line 74, column 27: " + [ v.constructor.name ]);
        });
    };
};
var encode = function (dict) {
    return dict.encode;
};
var decode = function (dict) {
    return dict.decode;
};
var cacheUncachedEntiteit = function (dictPerspectEntiteit) {
    return function (id) {
        return function (e) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(retrieveInternally(dictPerspectEntiteit)(id))(function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(representInternally(dictPerspectEntiteit)(id))(function (v1) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.putVar(e)(v1)))(function () {
                            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Unit.unit);
                        });
                    });
                };
                return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Control_Monad_Eff_Exception.error("cacheUncachedEntiteit: the cache should not hold an AVar for " + id));
            });
        };
    };
};
var cacheInDomeinFile = function (dict) {
    return dict.cacheInDomeinFile;
};
var cacheEntiteitPreservingVersion = function (dictPerspectEntiteit) {
    return function (id) {
        return function (e) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(retrieveInternally(dictPerspectEntiteit)(id))(function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return cacheUncachedEntiteit(dictPerspectEntiteit)(id)(e);
                };
                if (v instanceof Data_Maybe.Just) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.takeVar(v.value0)))(function (v1) {
                        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(setRevision$prime(dictPerspectEntiteit)(getRevision$prime(dictPerspectEntiteit)(v1))(e)))(function (v2) {
                            return Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.putVar(v2)(v.value0));
                        });
                    });
                };
                throw new Error("Failed pattern match at Perspectives.PerspectEntiteit line 81, column 3 - line 86, column 31: " + [ v.constructor.name ]);
            });
        };
    };
};
var cacheCachedEntiteit = function (dictPerspectEntiteit) {
    return function (id) {
        return function (e) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(retrieveInternally(dictPerspectEntiteit)(id))(function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Control_Monad_Eff_Exception.error("cacheCachedEntiteit: cannot change an entiteit that is not cached: " + id));
                };
                if (v instanceof Data_Maybe.Just) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.isEmptyVar(v.value0)))(function (v1) {
                        if (v1) {
                            return Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Apply.applySecond(Control_Monad_Aff.applyAff)(Control_Monad_Aff_AVar.putVar(e)(v.value0))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(e)));
                        };
                        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Monad_Aff_AVar.takeVar(v.value0)))(function (v2) {
                            return Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Control_Apply.applySecond(Control_Monad_Aff.applyAff)(Control_Monad_Aff_AVar.putVar(e)(v.value0))(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(e)));
                        });
                    });
                };
                throw new Error("Failed pattern match at Perspectives.PerspectEntiteit line 112, column 3 - line 120, column 44: " + [ v.constructor.name ]);
            });
        };
    };
};
var cacheEntiteit = function (dictPerspectEntiteit) {
    return function (id) {
        return function (e) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(retrieveInternally(dictPerspectEntiteit)(id))(function (v) {
                if (v instanceof Data_Maybe.Nothing) {
                    return cacheUncachedEntiteit(dictPerspectEntiteit)(id)(e);
                };
                return Data_Functor["void"](Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Aff.functorAff))(cacheCachedEntiteit(dictPerspectEntiteit)(id)(e));
            });
        };
    };
};
module.exports = {
    cacheInDomeinFile: cacheInDomeinFile,
    decode: decode,
    encode: encode,
    getId: getId,
    "getRevision'": getRevision$prime,
    getType: getType,
    representInternally: representInternally,
    retrieveFromDomein: retrieveFromDomein,
    retrieveInternally: retrieveInternally,
    setRevision: setRevision,
    "setRevision'": setRevision$prime,
    setType: setType,
    PerspectEntiteit: PerspectEntiteit,
    ensureInternalRepresentation: ensureInternalRepresentation,
    cacheEntiteitPreservingVersion: cacheEntiteitPreservingVersion,
    cacheEntiteit: cacheEntiteit,
    cacheUncachedEntiteit: cacheUncachedEntiteit,
    cacheCachedEntiteit: cacheCachedEntiteit,
    readEntiteitFromCache: readEntiteitFromCache,
    perspectEntiteitContext: perspectEntiteitContext,
    perspectEntiteitRol: perspectEntiteitRol
};
