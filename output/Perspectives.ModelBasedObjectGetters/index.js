// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_DataTypeObjectGetters = require("../Perspectives.DataTypeObjectGetters");
var Perspectives_ObjectGetterConstructors = require("../Perspectives.ObjectGetterConstructors");
var Perspectives_ObjectsGetterComposition = require("../Perspectives.ObjectsGetterComposition");
var rolIsVerplicht = Perspectives_ObjectGetterConstructors.booleanPropertyGetter("model:Perspectives$Context$aspect")("model:Perspectives$Rol$buitenRolBeschrijving$isVerplicht");
var rolIsFunctioneel = Perspectives_ObjectGetterConstructors.booleanPropertyGetter("model:Perspectives$Context$aspect")("model:Perspectives$Rol$buitenRolBeschrijving$isFunctioneel");
var rolInContextContextDef = Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_DataTypeObjectGetters.buitenRol)(Perspectives_ObjectGetterConstructors.getGebondenAls("model:Perspectives$Context$rolInContext")))(Perspectives_DataTypeObjectGetters.context);
var range = Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectGetterConstructors.getRol("model:Perspectives$Property$range"))(Perspectives_DataTypeObjectGetters.binding))(Perspectives_DataTypeObjectGetters.context);
var propertyIsVerplicht = Perspectives_ObjectGetterConstructors.booleanPropertyGetter("model:Perspectives$Context$aspectProperty")("model:Perspectives$Property$buitenRolBeschrijving$isVerplicht");
var propertyIsFunctioneel = Perspectives_ObjectGetterConstructors.booleanPropertyGetter("model:Perspectives$Context$aspectProperty")("model:Perspectives$Property$buitenRolBeschrijving$isFunctioneel");
var buitenRolContextDef = Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_DataTypeObjectGetters.buitenRol)(Perspectives_ObjectGetterConstructors.getGebondenAls("model:Perspectives$Context$buitenRolBeschrijving")))(Perspectives_DataTypeObjectGetters.context);
var buitenRolBeschrijvingDef = Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectGetterConstructors.getRolFromPrototypeHierarchy("model:Perspectives$Context$buitenRolBeschrijving"))(Perspectives_DataTypeObjectGetters.binding))(Perspectives_DataTypeObjectGetters.context);
var buitenRolBeschrijving = Perspectives_ObjectGetterConstructors.getRol("model:Perspectives$Context$buitenRolBeschrijving");
var binnenRolContextDef = Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_DataTypeObjectGetters.buitenRol)(Perspectives_ObjectGetterConstructors.getGebondenAls("model:Perspectives$Context$binnenRolBeschrijving")))(Perspectives_DataTypeObjectGetters.context);
var binnenRolBeschrijving = Perspectives_ObjectGetterConstructors.getRol("model:Perspectives$Context$binnenRolBeschrijving");
var bindingDef = Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectGetterConstructors.getRol("model:Perspectives$Rol$mogelijkeBinding"))(Perspectives_DataTypeObjectGetters.binding))(Perspectives_DataTypeObjectGetters.context);
var contextDef = function (rid) {
    return Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Control_Monad_Aff.altAff))(Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Control_Monad_Aff.altAff))(Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Control_Monad_Aff.altAff))(Perspectives_ObjectGetterConstructors.unlessNull(rolInContextContextDef)(rid))(Perspectives_ObjectGetterConstructors.unlessNull(binnenRolContextDef)(rid)))(Perspectives_ObjectGetterConstructors.unlessNull(buitenRolContextDef)(rid)))(bindingDef(rid));
};
module.exports = {
    rolIsVerplicht: rolIsVerplicht,
    rolIsFunctioneel: rolIsFunctioneel,
    range: range,
    buitenRolBeschrijving: buitenRolBeschrijving,
    buitenRolBeschrijvingDef: buitenRolBeschrijvingDef,
    binnenRolBeschrijving: binnenRolBeschrijving,
    contextDef: contextDef,
    bindingDef: bindingDef,
    rolInContextContextDef: rolInContextContextDef,
    binnenRolContextDef: binnenRolContextDef,
    buitenRolContextDef: buitenRolContextDef,
    propertyIsVerplicht: propertyIsVerplicht,
    propertyIsFunctioneel: propertyIsFunctioneel
};
