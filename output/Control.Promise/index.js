// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Alt = require("../Control.Alt");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Eff_Uncurried = require("../Control.Monad.Eff.Uncurried");
var Control_Monad_Except = require("../Control.Monad.Except");
var Control_Monad_Except_Trans = require("../Control.Monad.Except.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Foreign = require("../Data.Foreign");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Monoid = require("../Data.Monoid");
var Prelude = require("../Prelude");
var fromAff = function (aff) {
    return $foreign.promise(function (succ) {
        return function (err) {
            return Control_Monad_Aff.runAff_(Data_Either.either(err)(succ))(aff);
        };
    });
};
var coerce = function (fn) {
    return Data_Either.either(function (v) {
        return Control_Monad_Eff_Exception.error("Promise failed, couldn't extract JS Error or String");
    })(Control_Category.id(Control_Category.categoryFn))(Control_Monad_Except.runExcept(Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Data_Foreign.unsafeReadTagged("Error")(fn))(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Control_Monad_Eff_Exception.error)(Data_Foreign.readString(fn)))));
};
var toAff = function (p) {
    return Control_Monad_Aff.makeAff(function (cb) {
        return Data_Functor.voidRight(Control_Monad_Eff.functorEff)(Data_Monoid.mempty(Control_Monad_Aff.monoidCanceler))($foreign.thenImpl(p)(Control_Monad_Eff_Uncurried.mkEffFn1(function ($1) {
            return cb(Data_Either.Left.create(coerce($1)));
        }))(Control_Monad_Eff_Uncurried.mkEffFn1(function ($2) {
            return cb(Data_Either.Right.create($2));
        })));
    });
};
var toAffE = function (f) {
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(f))(toAff);
};
module.exports = {
    fromAff: fromAff,
    toAff: toAff,
    toAffE: toAffE
};
