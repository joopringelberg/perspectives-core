// Generated by purs version 0.11.7
"use strict";
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_DataTypeTripleGetters = require("../Perspectives.DataTypeTripleGetters");
var Perspectives_ModelBasedObjectGetters = require("../Perspectives.ModelBasedObjectGetters");
var Perspectives_QueryCombinators = require("../Perspectives.QueryCombinators");
var Perspectives_TripleGetterComposition = require("../Perspectives.TripleGetterComposition");
var Perspectives_TripleGetterConstructors = require("../Perspectives.TripleGetterConstructors");
var subjectRollenDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Rol$subjectRol"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
var rollenInContextM = Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Context$rolInContext");
var rolUserM = Perspectives_QueryCombinators["closure'"](Perspectives_DataTypeTripleGetters.bindingM);
var rolIsVerplichtM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$Rol$isVerplichtR")(Perspectives_ModelBasedObjectGetters.rolIsVerplicht);
var rolIsFunctioneelM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$Rol$isFunctioneelR")(Perspectives_ModelBasedObjectGetters.rolIsFunctioneel);
var rolInContextDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_DataTypeTripleGetters.buitenRolM)(Perspectives_TripleGetterConstructors.constructInverseRolGetter("model:Perspectives$Context$rolInContext")))(Perspectives_DataTypeTripleGetters.contextM);
var rangeDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Property$range"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
var propertyReferentiesM = Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$View$propertyReferentie");
var propertyIsVerplichtM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$Property$isVerplichtR")(Perspectives_ModelBasedObjectGetters.propertyIsVerplicht);
var propertyIsFunctioneelM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$Property$isFunctioneelR")(Perspectives_ModelBasedObjectGetters.propertyIsFunctioneel);
var ownRollenDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Context$rolInContext"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
var ownPropertiesDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Rol$rolProperty"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
var objectViewDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Actie$objectView"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
var objectRollenDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Rol$objectRol"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
var inverse_subjectRollenDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_DataTypeTripleGetters.buitenRolM)(Perspectives_TripleGetterConstructors.constructInverseRolGetter("model:Perspectives$Rol$subjectRol")))(Perspectives_DataTypeTripleGetters.contextM);
var hasLabelM = Perspectives_QueryCombinators.notEmpty(Perspectives_DataTypeTripleGetters.labelM);
var hasBindingM = Perspectives_QueryCombinators.notEmpty(Perspectives_DataTypeTripleGetters.bindingM);
var contextDefM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$getContextDef")(Perspectives_ModelBasedObjectGetters.contextDef);
var buitenRolContextDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_DataTypeTripleGetters.buitenRolM)(Perspectives_TripleGetterConstructors.constructInverseRolGetter("model:Perspectives$Context$buitenRolBeschrijving")))(Perspectives_DataTypeTripleGetters.contextM);
var buitenRolBeschrijvingM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$buitenRolBeschrijving")(Perspectives_ModelBasedObjectGetters.buitenRolBeschrijving);
var boundContextsM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_QueryCombinators.filter(Perspectives_TripleGetterConstructors.rolHasTypeWithLocalName("buitenRolBeschrijving"))(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_DataTypeTripleGetters.iedereRolInContextM)(Perspectives_DataTypeTripleGetters.bindingM)))(Perspectives_DataTypeTripleGetters.contextM);
var binnenRolContextDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_DataTypeTripleGetters.buitenRolM)(Perspectives_TripleGetterConstructors.constructInverseRolGetter("model:Perspectives$Context$binnenRolBeschrijvingM")))(Perspectives_DataTypeTripleGetters.contextM);
var binnenRolBeschrijvingM = Perspectives_TripleGetterConstructors.constructTripleGetterFromObjectsGetter("model:Perspectives$binnenRolBeschrijving")(Perspectives_ModelBasedObjectGetters.binnenRolBeschrijving);
var bindingDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Rol$mogelijkeBinding"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
var aspectenDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Context$aspect"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
var aspectenDefMClosure = Perspectives_QueryCombinators.closure(aspectenDefM);
var aspectRollenDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Rol$aspectRol"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
var aspectRollenDefMClosure = Perspectives_QueryCombinators.closure(aspectRollenDefM);
var propertiesDefM = Perspectives_QueryCombinators.concat(ownPropertiesDefM)(Perspectives_QueryCombinators.filter(Perspectives_QueryCombinators.not(Perspectives_QueryCombinators.containedIn(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_QueryCombinators.ref("#start"))(ownPropertiesDefM))))(Perspectives_TripleGetterComposition.composeLazy(aspectRollenDefM)(function (v) {
    return propertiesDefM;
})("propertyDef")));
var ownExternePropertiesDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(buitenRolBeschrijvingM)(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM))(propertiesDefM);
var ownInternePropertiesDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(binnenRolBeschrijvingM)(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM))(propertiesDefM);
var externePropertiesDefM = Perspectives_QueryCombinators.concat(ownExternePropertiesDefM)(Perspectives_QueryCombinators.filter(Perspectives_QueryCombinators.not(Perspectives_QueryCombinators.containedIn(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_QueryCombinators.ref("#start"))(ownInternePropertiesDefM))))(Perspectives_TripleGetterComposition.composeLazy(aspectenDefM)(function (v) {
    return externePropertiesDefM;
})("externePropertiesDefM")));
var internePropertiesDefM = Perspectives_QueryCombinators.concat(ownInternePropertiesDefM)(Perspectives_QueryCombinators.filter(Perspectives_QueryCombinators.not(Perspectives_QueryCombinators.containedIn(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_QueryCombinators.ref("#start"))(ownInternePropertiesDefM))))(Perspectives_TripleGetterComposition.composeLazy(aspectenDefM)(function (v) {
    return internePropertiesDefM;
})("internePropertiesDefM")));
var rollenDefM = Perspectives_QueryCombinators.concat(ownRollenDefM)(Perspectives_QueryCombinators.filter(Perspectives_QueryCombinators.not(Perspectives_QueryCombinators.containedIn(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_QueryCombinators.ref("#start"))(ownRollenDefM))(aspectRollenDefM))))(Perspectives_TripleGetterComposition.composeLazy(aspectenDefM)(function (v) {
    return rollenDefM;
})("rolDef")));
var actiesInContextDefM = Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterComposition.composeTripleGetters(Perspectives_TripleGetterConstructors.constructRolGetter("model:Perspectives$Zaak$actieInContext"))(Perspectives_DataTypeTripleGetters.bindingM))(Perspectives_DataTypeTripleGetters.contextM);
module.exports = {
    rolIsFunctioneelM: rolIsFunctioneelM,
    propertyIsFunctioneelM: propertyIsFunctioneelM,
    rolIsVerplichtM: rolIsVerplichtM,
    propertyIsVerplichtM: propertyIsVerplichtM,
    rangeDefM: rangeDefM,
    hasLabelM: hasLabelM,
    hasBindingM: hasBindingM,
    rolUserM: rolUserM,
    objectViewDefM: objectViewDefM,
    propertyReferentiesM: propertyReferentiesM,
    boundContextsM: boundContextsM,
    ownPropertiesDefM: ownPropertiesDefM,
    propertiesDefM: propertiesDefM,
    ownRollenDefM: ownRollenDefM,
    rollenDefM: rollenDefM,
    ownInternePropertiesDefM: ownInternePropertiesDefM,
    internePropertiesDefM: internePropertiesDefM,
    ownExternePropertiesDefM: ownExternePropertiesDefM,
    externePropertiesDefM: externePropertiesDefM,
    bindingDefM: bindingDefM,
    rollenInContextM: rollenInContextM,
    aspectenDefM: aspectenDefM,
    aspectRollenDefM: aspectRollenDefM,
    aspectRollenDefMClosure: aspectRollenDefMClosure,
    aspectenDefMClosure: aspectenDefMClosure,
    actiesInContextDefM: actiesInContextDefM,
    subjectRollenDefM: subjectRollenDefM,
    objectRollenDefM: objectRollenDefM,
    inverse_subjectRollenDefM: inverse_subjectRollenDefM,
    contextDefM: contextDefM,
    rolInContextDefM: rolInContextDefM,
    binnenRolContextDefM: binnenRolContextDefM,
    buitenRolContextDefM: buitenRolContextDefM,
    buitenRolBeschrijvingM: buitenRolBeschrijvingM,
    binnenRolBeschrijvingM: binnenRolBeschrijvingM
};
