// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Traversable = require("../Data.Traversable");
var Partial_Unsafe = require("../Partial.Unsafe");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_DataTypeObjectGetters = require("../Perspectives.DataTypeObjectGetters");
var Perspectives_Effects = require("../Perspectives.Effects");
var Perspectives_EntiteitAndRDFAliases = require("../Perspectives.EntiteitAndRDFAliases");
var Perspectives_Identifiers = require("../Perspectives.Identifiers");
var Perspectives_ModelBasedTripleGetters = require("../Perspectives.ModelBasedTripleGetters");
var Perspectives_ObjectGetterConstructors = require("../Perspectives.ObjectGetterConstructors");
var Perspectives_ObjectsGetterComposition = require("../Perspectives.ObjectsGetterComposition");
var Perspectives_QueryCombinators = require("../Perspectives.QueryCombinators");
var Perspectives_RunMonadPerspectivesQuery = require("../Perspectives.RunMonadPerspectivesQuery");
var Prelude = require("../Prelude");
var mogelijkeBinding = Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectGetterConstructors.getRol("model:Perspectives$Rol$mogelijkeBinding"))(Perspectives_DataTypeObjectGetters.binding))(Perspectives_DataTypeObjectGetters.context);
var importsAspect = function (tp) {
    return function (aspect) {
        var $18 = aspect === "model:Perspectives$ElkType";
        if ($18) {
            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(true);
        };
        return Data_Function.flip(Perspectives_RunMonadPerspectivesQuery.runMonadPerspectivesQuery)(Perspectives_QueryCombinators.toBoolean(Perspectives_QueryCombinators.contains(aspect)(Perspectives_ModelBasedTripleGetters.aspectenDefMClosure)))(tp);
    };
};
var checkContextForUnQualifiedRol = function (ln) {
    return function (cn) {
        var hasUnqualifiedRol = function (ln$prime) {
            return Perspectives_QueryCombinators.containsMatching(function (contextName) {
                return function (rolName) {
                    return contextName + ("$" + ln$prime) === rolName;
                };
            })("UnqualifiedRol" + ln$prime)(Perspectives_ModelBasedTripleGetters.ownRollenDefM);
        };
        var aspectsWithUnqualifiedRol = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_RunMonadPerspectivesQuery.runQuery(cn)(Perspectives_QueryCombinators.filter(hasUnqualifiedRol(ln))(Perspectives_ModelBasedTripleGetters.aspectenDefMClosure)))(Perspectives_CoreTypes.tripleObjects_(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)));
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(aspectsWithUnqualifiedRol)(function (v) {
            var v1 = Data_Array.length(v);
            if (v1 === 0) {
                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Either.Left.create(new Perspectives_CoreTypes.MissingUnqualifiedRol(ln, cn)));
            };
            if (v1 === 1) {
                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Either.Right.create(Data_Maybe.fromJust()(Data_Array.head(v))));
            };
            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Either.Left.create(new Perspectives_CoreTypes.MultipleDefinitions(ln, v)));
        });
    };
};
var alternatives = Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectsGetterComposition.unionOfObjects(Perspectives_ObjectGetterConstructors.getRol("model:Perspectives$Sum$alternative"))(Perspectives_DataTypeObjectGetters.binding))(Perspectives_DataTypeObjectGetters.context);
var checkRolForUnQualifiedProperty = function (ln) {
    return function (rn$prime) {
        var hasUnqualifiedProperty = function (ln$prime) {
            return Perspectives_QueryCombinators.containsMatching(function (rolName) {
                return function (propertyName) {
                    return rolName + ("$" + ln$prime) === propertyName;
                };
            })("UnqualifiedProperty" + ln$prime)(Perspectives_ModelBasedTripleGetters.propertiesDefM);
        };
        var aspectsWithUnqualifiedProperty = function (ln$prime) {
            return function (rn) {
                var importedAspectsWithUnqualifiedProperty = function (rn$prime$prime) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_RunMonadPerspectivesQuery.runQuery(rn$prime$prime)(Perspectives_QueryCombinators.filter(hasUnqualifiedProperty(ln$prime))(Perspectives_ModelBasedTripleGetters.aspectenDefMClosure)))(Perspectives_CoreTypes.tripleObjects_(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)));
                };
                var aspectsFromMogelijkeBindingWithUnqualifiedProperty = function (rn$prime$prime) {
                    return Control_Alt.alt(Control_Monad_Reader_Trans.altReaderT(Control_Monad_Aff.altAff))(Perspectives_ObjectGetterConstructors.unlessNull(Perspectives_ObjectsGetterComposition.intersectionOfObjects(Perspectives_ObjectsGetterComposition.unionOfObjects(mogelijkeBinding)(alternatives))(aspectsWithUnqualifiedProperty(ln$prime)))(rn$prime$prime))(Perspectives_ObjectsGetterComposition.unionOfObjects(mogelijkeBinding)(aspectsWithUnqualifiedProperty(ln$prime))(rn$prime$prime));
                };
                return Control_Apply.apply(Control_Monad_Reader_Trans.applyReaderT(Control_Monad_Aff.applyAff))(Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Aff.functorAff))(Data_Array.union(Data_Eq.eqString))(importedAspectsWithUnqualifiedProperty(rn)))(aspectsFromMogelijkeBindingWithUnqualifiedProperty(rn));
            };
        };
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(aspectsWithUnqualifiedProperty(ln)(rn$prime))(function (v) {
            var v1 = Data_Array.length(v);
            if (v1 === 0) {
                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Either.Left.create(new Perspectives_CoreTypes.MissingUnqualifiedProperty(ln, rn$prime)));
            };
            if (v1 === 1) {
                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Either.Right.create(Data_Maybe.fromJust()(Data_Array.head(v))));
            };
            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Either.Left.create(new Perspectives_CoreTypes.MultipleDefinitions(ln, v)));
        });
    };
};
var isOrHasAspect = function (subtype) {
    return function (aspect) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(alternatives(aspect))(function (v) {
            var v1 = Data_Array.head(v);
            if (v1 instanceof Data_Maybe.Nothing) {
                var $25 = aspect === subtype;
                if ($25) {
                    return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(true);
                };
                return importsAspect(subtype)(aspect);
            };
            return Data_Array.foldM(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff))(function (r) {
                return function (alt) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(isOrHasAspect(subtype)(alt))(function ($37) {
                        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(r || $37);
                    });
                };
            })(false)(v);
        });
    };
};
var checkContextForQualifiedRol = function (rn) {
    return function (cn) {
        var checkContextHasRol = function (cn$prime) {
            return function (rn$prime) {
                return Perspectives_RunMonadPerspectivesQuery.runMonadPerspectivesQuery(cn$prime)(Perspectives_QueryCombinators.toBoolean(Perspectives_QueryCombinators.contains(rn$prime)(Perspectives_ModelBasedTripleGetters.ownRollenDefM)));
            };
        };
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_Identifiers.guardWellFormedNess(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Perspectives_Identifiers.deconstructNamespace)(rn))(function (v) {
            return Control_Apply.apply(Control_Monad_Reader_Trans.applyReaderT(Control_Monad_Aff.applyAff))(Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Aff.functorAff))(Data_HeytingAlgebra.conj(Data_HeytingAlgebra.heytingAlgebraBoolean))(isOrHasAspect(cn)(v)))(checkContextHasRol(v)(rn));
        });
    };
};
var checkRolForQualifiedProperty = function (pn) {
    return function (rn) {
        var checkRolHasProperty = function (rn$prime) {
            return function (pn$prime) {
                return Perspectives_RunMonadPerspectivesQuery.runMonadPerspectivesQuery(rn$prime)(Perspectives_QueryCombinators.toBoolean(Perspectives_QueryCombinators.contains(pn$prime)(Perspectives_ModelBasedTripleGetters.propertiesDefM)));
            };
        };
        var checkMogelijkeBindingHasAspect = function (rn$prime) {
            return function (an) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(mogelijkeBinding(rn$prime))(function (v) {
                    var v1 = Data_Array.head(v);
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(false);
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(alternatives(v1.value0))(function (v2) {
                            var v3 = Data_Array.head(v2);
                            if (v3 instanceof Data_Maybe.Nothing) {
                                return checkRolForQualifiedProperty(pn)(v1.value0);
                            };
                            return Data_Array.foldM(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff))(function (r) {
                                return function (alt) {
                                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(checkRolForQualifiedProperty(pn)(alt))(function ($38) {
                                        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(r && $38);
                                    });
                                };
                            })(true)(v2);
                        });
                    };
                    throw new Error("Failed pattern match at Perpectives.TypeChecker line 40, column 7 - line 46, column 111: " + [ v1.constructor.name ]);
                });
            };
        };
        var checkRolHasAspect = function (rn$prime) {
            return function (an) {
                return Control_Apply.apply(Control_Monad_Reader_Trans.applyReaderT(Control_Monad_Aff.applyAff))(Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Aff.functorAff))(Data_HeytingAlgebra.disj(Data_HeytingAlgebra.heytingAlgebraBoolean))(isOrHasAspect(rn$prime)(an)))(checkMogelijkeBindingHasAspect(rn$prime)(an));
            };
        };
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_Identifiers.guardWellFormedNess(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Perspectives_Identifiers.deconstructNamespace)(pn))(function (v) {
            return Control_Apply.apply(Control_Monad_Reader_Trans.applyReaderT(Control_Monad_Aff.applyAff))(Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Aff.functorAff))(Data_HeytingAlgebra.conj(Data_HeytingAlgebra.heytingAlgebraBoolean))(checkRolHasAspect(rn)(v)))(checkRolHasProperty(v)(pn));
        });
    };
};
var contextHasType = function (ctxt) {
    return function (tp) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_CoreTypes.applyObjectsGetterToObject(ctxt)(Perspectives_DataTypeObjectGetters.contextType))(function (v) {
            return isOrHasAspect(v)(tp);
        });
    };
};
var mostSpecificCommonAspect = function (types) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Perspectives_RunMonadPerspectivesQuery.runTypedTripleGetter(Perspectives_ModelBasedTripleGetters.aspectenDefMClosure))(types))(function (v) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Control_Bind.join(Control_Bind.bindArray)(Data_Functor.map(Data_Functor.functorArray)(Perspectives_CoreTypes.tripleObjects)(v))))(function (v1) {
            return Data_Array.foldM(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff))(function (msca) {
                return function (t) {
                    return Control_Bind.ifM(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(isOrHasAspect(t)(msca))(Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(msca))(Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(t));
                };
            })("model:Perspectives$ElkType")(v1);
        });
    });
};
var rolHasType = function (rol) {
    return function (tp) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_CoreTypes.applyObjectsGetterToObject(rol)(Perspectives_DataTypeObjectGetters.rolType))(function (v) {
            return isOrHasAspect(v)(tp);
        });
    };
};
module.exports = {
    checkRolForQualifiedProperty: checkRolForQualifiedProperty,
    mogelijkeBinding: mogelijkeBinding,
    alternatives: alternatives,
    checkContextForQualifiedRol: checkContextForQualifiedRol,
    checkRolForUnQualifiedProperty: checkRolForUnQualifiedProperty,
    checkContextForUnQualifiedRol: checkContextForUnQualifiedRol,
    isOrHasAspect: isOrHasAspect,
    importsAspect: importsAspect,
    contextHasType: contextHasType,
    rolHasType: rolHasType,
    mostSpecificCommonAspect: mostSpecificCommonAspect
};
