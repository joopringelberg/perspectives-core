// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Gen = require("../Control.Monad.Gen");
var Control_Monad_Gen_Class = require("../Control.Monad.Gen.Class");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_These = require("../Data.These");
var Prelude = require("../Prelude");
var URI_Host_Gen = require("../URI.Host.Gen");
var URI_HostPortPair = require("../URI.HostPortPair");
var URI_Port_Gen = require("../URI.Port.Gen");
var genHostPortPair = function (dictMonadGen) {
    return function (host) {
        return function (port) {
            var sometimes = function (chance) {
                return function (g) {
                    return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(Control_Monad_Gen_Class.chooseFloat(dictMonadGen)(0.0)(1.0))(function (v) {
                        var $5 = v > chance;
                        if ($5) {
                            return Data_Functor.map((((dictMonadGen.Monad0()).Bind1()).Apply0()).Functor0())(Data_Maybe.Just.create)(g);
                        };
                        return Control_Applicative.pure((dictMonadGen.Monad0()).Applicative0())(Data_Maybe.Nothing.value);
                    });
                };
            };
            return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(sometimes(0.75)(host))(function (v) {
                return Control_Bind.bind((dictMonadGen.Monad0()).Bind1())(sometimes(0.25)(port))(function (v1) {
                    return Control_Applicative.pure((dictMonadGen.Monad0()).Applicative0())((function () {
                        if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                            return new Data_Maybe.Just(new Data_These.Both(v.value0, v1.value0));
                        };
                        if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Nothing) {
                            return new Data_Maybe.Just(new Data_These.This(v.value0));
                        };
                        if (v instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Just) {
                            return new Data_Maybe.Just(new Data_These.That(v1.value0));
                        };
                        if (v instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Nothing) {
                            return Data_Maybe.Nothing.value;
                        };
                        throw new Error("Failed pattern match at URI.HostPortPair.Gen line 26, column 8 - line 30, column 31: " + [ v.constructor.name, v1.constructor.name ]);
                    })());
                });
            });
        };
    };
};
module.exports = {
    genHostPortPair: genHostPortPair
};
