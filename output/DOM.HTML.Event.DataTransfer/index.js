// Generated by purs version 0.11.7
"use strict";
var $foreign = require("./foreign");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var DOM = require("../DOM");
var DOM_File_Types = require("../DOM.File.Types");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_MediaType = require("../Data.MediaType");
var Data_Nullable = require("../Data.Nullable");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Partial = require("../Partial");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Copy = (function () {
    function Copy() {

    };
    Copy.value = new Copy();
    return Copy;
})();
var Link = (function () {
    function Link() {

    };
    Link.value = new Link();
    return Link;
})();
var Move = (function () {
    function Move() {

    };
    Move.value = new Move();
    return Move;
})();
var None = (function () {
    function None() {

    };
    None.value = new None();
    return None;
})();
var setDropEffect = function (de) {
    return $foreign.setDropEffectImpl((function () {
        if (de instanceof Copy) {
            return "copy";
        };
        if (de instanceof Link) {
            return "link";
        };
        if (de instanceof Move) {
            return "move";
        };
        if (de instanceof None) {
            return "none";
        };
        throw new Error("Failed pattern match at DOM.HTML.Event.DataTransfer line 93, column 38 - line 97, column 11: " + [ de.constructor.name ]);
    })());
};
var setData = function (v) {
    return function (dat) {
        return function (dt) {
            return $foreign.setDataImpl(v)(dat)(dt);
        };
    };
};
var getData = function (v) {
    return function (dt) {
        return $foreign.getDataImpl(v)(dt);
    };
};
var files = Data_Functor.map(Data_Functor.functorFn)(Data_Nullable.toMaybe)($foreign._files);
var eqDropEffect = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof Copy && y instanceof Copy) {
            return true;
        };
        if (x instanceof Link && y instanceof Link) {
            return true;
        };
        if (x instanceof Move && y instanceof Move) {
            return true;
        };
        if (x instanceof None && y instanceof None) {
            return true;
        };
        return false;
    };
});
var ordDropEffect = new Data_Ord.Ord(function () {
    return eqDropEffect;
}, function (x) {
    return function (y) {
        if (x instanceof Copy && y instanceof Copy) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Copy) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Copy) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Link && y instanceof Link) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Link) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Link) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof Move && y instanceof Move) {
            return Data_Ordering.EQ.value;
        };
        if (x instanceof Move) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof Move) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof None && y instanceof None) {
            return Data_Ordering.EQ.value;
        };
        throw new Error("Failed pattern match at DOM.HTML.Event.DataTransfer line 76, column 8 - line 76, column 48: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var dropEffect = function (dt) {
    return function __do() {
        var v = $foreign.dropEffectImpl(dt)();
        return (function (dictPartial) {
            if (v === "copy") {
                return Copy.value;
            };
            if (v === "link") {
                return Link.value;
            };
            if (v === "move") {
                return Move.value;
            };
            if (v === "none") {
                return None.value;
            };
            return Partial.crashWith(dictPartial)("Impossible according to https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/dropEffect");
        })();
    };
};
module.exports = {
    files: files,
    getData: getData,
    setData: setData,
    Copy: Copy,
    Link: Link,
    Move: Move,
    None: None,
    dropEffect: dropEffect,
    setDropEffect: setDropEffect,
    eqDropEffect: eqDropEffect,
    ordDropEffect: ordDropEffect,
    types: $foreign.types
};
