// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_GlobalUnsafeStrMap = require("../Perspectives.GlobalUnsafeStrMap");
var Perspectives_PerspectivesState = require("../Perspectives.PerspectivesState");
var Prelude = require("../Prelude");
var userCache = Perspectives_GlobalUnsafeStrMap["new"](Data_Unit.unit);
var setUser = function (n) {
    return Perspectives_PerspectivesState.modifyPerspectivesState(function (v) {
        var $21 = {};
        for (var $22 in v) {
            if ({}.hasOwnProperty.call(v, $22)) {
                $21[$22] = v[$22];
            };
        };
        $21.userInfo = (function () {
            var $18 = {};
            for (var $19 in v.userInfo) {
                if ({}.hasOwnProperty.call(v.userInfo, $19)) {
                    $18[$19] = v["userInfo"][$19];
                };
            };
            $18.userName = n;
            return $18;
        })();
        return $21;
    });
};
var setCouchdbPassword = function (pw) {
    return Perspectives_PerspectivesState.modifyPerspectivesState(function (v) {
        var $29 = {};
        for (var $30 in v) {
            if ({}.hasOwnProperty.call(v, $30)) {
                $29[$30] = v[$30];
            };
        };
        $29.userInfo = (function () {
            var $26 = {};
            for (var $27 in v.userInfo) {
                if ({}.hasOwnProperty.call(v.userInfo, $27)) {
                    $26[$27] = v["userInfo"][$27];
                };
            };
            $26.couchdbPassword = pw;
            return $26;
        })();
        return $29;
    });
};
var setCouchdbBaseURL = function (pw) {
    return Perspectives_PerspectivesState.modifyPerspectivesState(function (v) {
        var $37 = {};
        for (var $38 in v) {
            if ({}.hasOwnProperty.call(v, $38)) {
                $37[$38] = v[$38];
            };
        };
        $37.userInfo = (function () {
            var $34 = {};
            for (var $35 in v.userInfo) {
                if ({}.hasOwnProperty.call(v.userInfo, $35)) {
                    $34[$35] = v["userInfo"][$35];
                };
            };
            $34.couchdbBaseURL = pw;
            return $34;
        })();
        return $37;
    });
};
var getUser = Perspectives_PerspectivesState.getsPerspectivesState(function ($43) {
    return (function (v) {
        return v.userName;
    })((function (v) {
        return v.userInfo;
    })($43));
});
var getCouchdbPassword = Perspectives_PerspectivesState.getsPerspectivesState(function ($44) {
    return (function (v) {
        return v.couchdbPassword;
    })((function (v) {
        return v.userInfo;
    })($44));
});
var getCouchdbBaseURL = Perspectives_PerspectivesState.getsPerspectivesState(function ($45) {
    return (function (v) {
        return v.couchdbBaseURL;
    })((function (v) {
        return v.userInfo;
    })($45));
});
var entitiesDatabase = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getUser)(function (v) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(getCouchdbBaseURL)(function (v1) {
        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(v1 + ("user_" + (v + "_entities/")));
    });
});
module.exports = {
    userCache: userCache,
    getUser: getUser,
    setUser: setUser,
    getCouchdbPassword: getCouchdbPassword,
    setCouchdbPassword: setCouchdbPassword,
    getCouchdbBaseURL: getCouchdbBaseURL,
    setCouchdbBaseURL: setCouchdbBaseURL,
    entitiesDatabase: entitiesDatabase
};
