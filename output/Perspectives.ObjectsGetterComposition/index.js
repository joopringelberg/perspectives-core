// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Monoid_Disj = require("../Data.Monoid.Disj");
var Data_Newtype = require("../Data.Newtype");
var Data_Show = require("../Data.Show");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_EntiteitAndRDFAliases = require("../Perspectives.EntiteitAndRDFAliases");
var Prelude = require("../Prelude");
var unionOfObjects = function (p) {
    return function (q) {
        return Control_Bind.composeKleisli(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(p)(function (objectsOfP) {
            return Data_Array.foldM(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff))(function (r) {
                return function (objectOfP) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(q(objectOfP))(function ($1) {
                        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Array.union(Data_Eq.eqString)(r)($1));
                    });
                };
            })([  ])(objectsOfP);
        });
    };
};
var intersectionOfObjects = function (p) {
    return function (q) {
        return Control_Bind.composeKleisli(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(p)(function (objectsOfP) {
            return Data_Array.foldM(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff))(function (r) {
                return function (objectOfP) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(q(objectOfP))(function ($2) {
                        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Array.intersect(Data_Eq.eqString)(r)($2));
                    });
                };
            })([  ])(objectsOfP);
        });
    };
};
var composeMonoidal = function (dictShow) {
    return function (p) {
        return function (f) {
            return Control_Bind.composeKleisli(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(p)(function ($3) {
                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Array.singleton(Data_Show.show(dictShow)(f($3))));
            });
        };
    };
};
var contains = function (obj) {
    return function (p) {
        return composeMonoidal(Data_Show.showBoolean)(p)(Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid_Disj.monoidDisj(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Data_Eq.eq(Data_Eq.eqString)(obj)));
    };
};
module.exports = {
    unionOfObjects: unionOfObjects,
    intersectionOfObjects: intersectionOfObjects,
    composeMonoidal: composeMonoidal,
    contains: contains
};
