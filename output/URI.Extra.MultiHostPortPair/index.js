// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_String = require("../Data.String");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Data_These = require("../Data.These");
var Prelude = require("../Prelude");
var Text_Parsing_Parser = require("../Text.Parsing.Parser");
var Text_Parsing_Parser_Combinators = require("../Text.Parsing.Parser.Combinators");
var Text_Parsing_Parser_String = require("../Text.Parsing.Parser.String");
var URI_Common = require("../URI.Common");
var URI_Host = require("../URI.Host");
var URI_Host_IPv4Address = require("../URI.Host.IPv4Address");
var URI_Host_IPv6Address = require("../URI.Host.IPv6Address");
var URI_Host_RegName = require("../URI.Host.RegName");
var URI_HostPortPair = require("../URI.HostPortPair");
var URI_Port = require("../URI.Port");
var print = function (printHost) {
    return function (printPort) {
        return function ($10) {
            return Data_String.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(function ($11) {
                return URI_HostPortPair.print(printHost)(printPort)(Data_Maybe.Just.create($11));
            })($10));
        };
    };
};
var parseRegName$prime = (function () {
    var c = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(URI_Common.unreserved)(Text_Parsing_Parser_String.oneOf(Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)([ "!", "$", "&", "'", "(", ")", "*", "+", ";", "=" ]));
    var p = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(URI_Common.pctEncoded)(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_NonEmpty.singleton)(c));
    return Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function ($12) {
        return URI_Host_RegName.unsafeFromString(Data_String_NonEmpty.join1With(Data_Array_NonEmpty.foldable1NonEmptyArray)("")($12));
    })(Data_Array_NonEmpty.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(p));
})();
var parseHost$prime = function (p) {
    return URI_Common.wrapParser(Data_Identity.monadIdentity)(p)(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(URI_Host.IPv6Address.create)(URI_Host_IPv6Address.parser))(Text_Parsing_Parser_Combinators["try"](Data_Identity.monadIdentity)(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(URI_Host.IPv4Address.create)(URI_Host_IPv4Address.parser))))(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(URI_Host.NameAddress.create)(parseRegName$prime)));
};
var parsePair = function (parseHost) {
    return function (parsePort) {
        return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.optionMaybe(Data_Identity.monadIdentity)(parseHost$prime(parseHost)))(function (v) {
            return Control_Bind.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.optionMaybe(Data_Identity.monadIdentity)(URI_Common.wrapParser(Data_Identity.monadIdentity)(parsePort)(URI_Port.parser)))(function (v1) {
                if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new Data_These.This(v.value0));
                };
                if (v instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Just) {
                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new Data_These.That(v1.value0));
                };
                if (v instanceof Data_Maybe.Just && v1 instanceof Data_Maybe.Just) {
                    return Control_Applicative.pure(Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new Data_These.Both(v.value0, v1.value0));
                };
                if (v instanceof Data_Maybe.Nothing && v1 instanceof Data_Maybe.Nothing) {
                    return Text_Parsing_Parser.fail(Data_Identity.monadIdentity)("Neither host nor port present");
                };
                throw new Error("Failed pattern match at URI.Extra.MultiHostPortPair line 59, column 3 - line 65, column 1: " + [ v.constructor.name, v1.constructor.name ]);
            });
        });
    };
};
var parser = function (parseHost) {
    return function (parsePort) {
        return Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_Array.fromFoldable(Data_List_Types.foldableList))(Text_Parsing_Parser_Combinators.sepBy(Data_Identity.monadIdentity)(parsePair(parseHost)(parsePort))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(",")));
    };
};
module.exports = {
    parser: parser,
    print: print
};
