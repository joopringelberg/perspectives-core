// Generated by purs version 0.11.7
"use strict";
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff_Now = require("../Control.Monad.Eff.Now");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Data_Function = require("../Data.Function");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Unit = require("../Data.Unit");
var Perspectives_ContextAndRole = require("../Perspectives.ContextAndRole");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_Deltas = require("../Perspectives.Deltas");
var Perspectives_Effects = require("../Perspectives.Effects");
var Perspectives_EntiteitAndRDFAliases = require("../Perspectives.EntiteitAndRDFAliases");
var Perspectives_Identifiers = require("../Perspectives.Identifiers");
var Perspectives_PerspectEntiteit = require("../Perspectives.PerspectEntiteit");
var Perspectives_ResourceRetrieval = require("../Perspectives.ResourceRetrieval");
var Perspectives_Syntax = require("../Perspectives.Syntax");
var Prelude = require("../Prelude");
var rolRecord = function (tp) {
    return function (ns) {
        return function (ln) {
            var $7 = {};
            for (var $8 in Perspectives_ContextAndRole.defaultRolRecord) {
                if ({}.hasOwnProperty.call(Perspectives_ContextAndRole.defaultRolRecord, $8)) {
                    $7[$8] = Perspectives_ContextAndRole["defaultRolRecord"][$8];
                };
            };
            $7._id = ns + ("$" + (ln + "_BuitenRol"));
            $7.pspType = "model:Perspectives$Context$buitenRol";
            $7.context = ns + ("$" + ln);
            return $7;
        };
    };
};
var contextRecord = function (ns) {
    return function (ln) {
        return function (tp) {
            var $13 = {};
            for (var $14 in Perspectives_ContextAndRole.defaultContextRecord) {
                if ({}.hasOwnProperty.call(Perspectives_ContextAndRole.defaultContextRecord, $14)) {
                    $13[$14] = Perspectives_ContextAndRole["defaultContextRecord"][$14];
                };
            };
            $13._id = ns + ("$" + ln);
            $13.displayName = ln;
            $13.pspType = tp;
            $13.binnenRol = Perspectives_Syntax.PerspectRol((function () {
                var $10 = {};
                for (var $11 in Perspectives_ContextAndRole.defaultRolRecord) {
                    if ({}.hasOwnProperty.call(Perspectives_ContextAndRole.defaultRolRecord, $11)) {
                        $10[$11] = Perspectives_ContextAndRole["defaultRolRecord"][$11];
                    };
                };
                $10._id = ns + ("$" + (ln + "_BinnenRol"));
                $10.pspType = "model:Perspectives$Context$binnenRol";
                $10.binding = Perspectives_Syntax.binding(ns + ("$" + (ln + "_BuitenRol")));
                return $10;
            })());
            $13.buitenRol = ns + ("$" + (ln + "_BuitenRol"));
            return $13;
        };
    };
};
var buitenRolRecord = rolRecord("model:Perspectives$Context$buitenRol");
var setupUser = Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectEntiteit.cacheUncachedEntiteit(Perspectives_PerspectEntiteit.perspectEntiteitContext)("model:User$Systeem")(Perspectives_Syntax.PerspectContext(contextRecord("model:User")("Systeem")("model:Systeem$Systeem"))))(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectEntiteit.cacheUncachedEntiteit(Perspectives_PerspectEntiteit.perspectEntiteitRol)("model:User$Systeem_BuitenRol")(Perspectives_Syntax.PerspectRol(buitenRolRecord("model:User")("Systeem"))))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectEntiteit.cacheUncachedEntiteit(Perspectives_PerspectEntiteit.perspectEntiteitRol)("model:User$Me")(Perspectives_Syntax.PerspectRol(rolRecord("model:Systeem$Systeem$gebruiker")("model:User")("Me"))))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectEntiteit.cacheUncachedEntiteit(Perspectives_PerspectEntiteit.perspectEntiteitContext)("model:User$TrustedCluster")(Perspectives_Syntax.PerspectContext(contextRecord("model:User")("TrustedCluster")("model:Systeem$TrustedCluster"))))(function () {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_ResourceRetrieval.saveUnversionedEntiteit(Perspectives_PerspectEntiteit.perspectEntiteitContext)("model:User$Systeem"))(function (v) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_ResourceRetrieval.saveUnversionedEntiteit(Perspectives_PerspectEntiteit.perspectEntiteitRol)("model:User$Systeem_BuitenRol"))(function (v1) {
                        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_ResourceRetrieval.saveUnversionedEntiteit(Perspectives_PerspectEntiteit.perspectEntiteitRol)("model:User$Me"))(function (v2) {
                            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_ResourceRetrieval.saveUnversionedEntiteit(Perspectives_PerspectEntiteit.perspectEntiteitContext)("model:User$TrustedCluster"))(function (v3) {
                                return Perspectives_Deltas.runInTransactie(Perspectives_Deltas.addRol("model:User$Systeem")("model:User$Systeem$gebruiker")("model:User$Me"));
                            });
                        });
                    });
                });
            });
        });
    });
});
module.exports = {
    setupUser: setupUser,
    contextRecord: contextRecord,
    rolRecord: rolRecord,
    buitenRolRecord: buitenRolRecord
};
