// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_State_Trans = require("../Control.Monad.State.Trans");
var Data_Array = require("../Data.Array");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Traversable = require("../Data.Traversable");
var Data_Unit = require("../Data.Unit");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_TripleAdministration = require("../Perspectives.TripleAdministration");
var Prelude = require("../Prelude");
var composeTripleGetters = function (v) {
    return function (v1) {
        var name = "(" + (v.value0 + (" >-> " + (v1.value0 + ")")));
        var getter = function (id) {
            return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v.value1(id))(function (v2) {
                return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v1.value1)(Data_Array.difference(Data_Eq.eqString)(v2.object)([ id ])))(function (v3) {
                    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Data_Array.nub(Data_Eq.eqString)(Control_Bind.join(Control_Bind.bindArray)(Data_Functor.map(Data_Functor.functorArray)(function (v4) {
                        return v4.object;
                    })(v3)))))(function (v4) {
                        return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))({
                            subject: id,
                            predicate: name,
                            object: v4,
                            dependencies: [  ],
                            supports: Data_Functor.map(Data_Functor.functorArray)(Perspectives_TripleAdministration.getRef)(Data_Array.cons(v2)(v3)),
                            tripleGetter: getter
                        });
                    });
                });
            });
        };
        return Perspectives_TripleAdministration.memorize(getter)(name);
    };
};
var composeLazy = function (v) {
    return function (g) {
        return function (nameOfg) {
            var name = "(" + (v.value0 + (" >-> " + (nameOfg + ")")));
            var getter = function (id) {
                return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v.value1(id))(function (v1) {
                    var v2 = Data_Array.head(v1.object);
                    if (v2 instanceof Data_Maybe.Nothing) {
                        return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v1);
                    };
                    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(g(Data_Unit.unit)))(function (v3) {
                        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(v3.value1)(Data_Array.difference(Data_Eq.eqString)(v1.object)([ id ])))(function (v4) {
                            return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))(Data_Array.nub(Data_Eq.eqString)(Control_Bind.join(Control_Bind.bindArray)(Data_Functor.map(Data_Functor.functorArray)(function (v5) {
                                return v5.object;
                            })(v4)))))(function (v5) {
                                return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Aff.monadAff)))({
                                    subject: id,
                                    predicate: name,
                                    object: v5,
                                    dependencies: [  ],
                                    supports: Data_Functor.map(Data_Functor.functorArray)(Perspectives_TripleAdministration.getRef)(Data_Array.cons(v1)(v4)),
                                    tripleGetter: getter
                                });
                            });
                        });
                    });
                });
            };
            return Perspectives_TripleAdministration.memorize(getter)(name);
        };
    };
};
module.exports = {
    composeTripleGetters: composeTripleGetters,
    composeLazy: composeLazy
};
