// Generated by purs version 0.11.7
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Array = require("../Data.Array");
var Data_Array_NonEmpty = require("../Data.Array.NonEmpty");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Functor = require("../Data.Functor");
var Data_Identity = require("../Data.Identity");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_String_NonEmpty = require("../Data.String.NonEmpty");
var Global = require("../Global");
var Prelude = require("../Prelude");
var Text_Parsing_Parser = require("../Text.Parsing.Parser");
var Text_Parsing_Parser_String = require("../Text.Parsing.Parser.String");
var URI_Common = require("../URI.Common");
var PathSegmentNZNC = function (x) {
    return x;
};
var PathSegmentNZ = function (x) {
    return x;
};
var PathSegment = function (x) {
    return x;
};
var unsafeSegmentToString = function (v) {
    return v;
};
var unsafeSegmentNZToString = function (v) {
    return v;
};
var unsafeSegmentNZNCToString = function (v) {
    return v;
};
var unsafeSegmentNZNCFromString = PathSegmentNZNC;
var unsafeSegmentNZFromString = PathSegmentNZ;
var unsafeSegmentFromString = PathSegment;
var showPathSegmentNZNC = new Data_Show.Show(function (v) {
    return "(Segment.unsafeSegmentNZNCToString " + (Data_Show.show(Data_String_NonEmpty.showNonEmptyString)(v) + ")");
});
var showPathSegmentNZ = new Data_Show.Show(function (v) {
    return "(Segment.unsafeSegmentNZFromString " + (Data_Show.show(Data_String_NonEmpty.showNonEmptyString)(v) + ")");
});
var showPathSegment = new Data_Show.Show(function (v) {
    return "(Segment.unsafeSegmentToString " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var segmentToString = function (v) {
    return Global["decodeURIComponent"](v);
};
var segmentNZToString = function (v) {
    return URI_Common["decodeURIComponent'"](v);
};
var segmentNZNCToString = function (v) {
    return URI_Common["decodeURIComponent'"](v);
};
var segmentNCChar = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(URI_Common.unreserved)(URI_Common.subDelims))(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)("@"));
var segmentNZNCFromString = function ($18) {
    return PathSegmentNZNC(URI_Common["printEncoded'"](segmentNCChar)($18));
};
var segmentChar = Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(segmentNCChar)(Text_Parsing_Parser_String["char"](Text_Parsing_Parser_String.stringLikeString)(Data_Identity.monadIdentity)(":"));
var segmentFromString = function ($19) {
    return PathSegment(URI_Common.printEncoded(segmentChar)($19));
};
var segmentNZFromString = function ($20) {
    return PathSegmentNZ(URI_Common["printEncoded'"](segmentChar)($20));
};
var printSegmentNZNC = function ($21) {
    return Data_String_NonEmpty.toString(unsafeSegmentNZNCToString($21));
};
var printSegmentNZ = function ($22) {
    return Data_String_NonEmpty.toString(unsafeSegmentNZToString($22));
};
var printSegment = unsafeSegmentToString;
var parseSegmentNZNC = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function ($23) {
    return PathSegmentNZNC(Data_String_NonEmpty.join1With(Data_Array_NonEmpty.foldable1NonEmptyArray)("")($23));
})(Data_Array_NonEmpty.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(URI_Common.pctEncoded)(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_NonEmpty.singleton)(segmentNCChar))));
var parseSegmentNZ = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function ($24) {
    return PathSegmentNZ(Data_String_NonEmpty.join1With(Data_Array_NonEmpty.foldable1NonEmptyArray)("")($24));
})(Data_Array_NonEmpty.some(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(URI_Common.pctEncoded)(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_NonEmpty.singleton)(segmentChar))));
var parseSegment = Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(function ($25) {
    return PathSegment(Data_String_NonEmpty.joinWith(Data_Foldable.foldableArray)("")($25));
})(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Alt.alt(Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(URI_Common.pctEncoded)(Data_Functor.map(Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_String_NonEmpty.singleton)(segmentChar))));
var ordPathSegmentNZNC = Data_String_NonEmpty.ordNonEmptyString;
var ordPathSegmentNZ = Data_String_NonEmpty.ordNonEmptyString;
var ordPathSegment = Data_Ord.ordString;
var eqPathSegmentNZNC = Data_String_NonEmpty.eqNonEmptyString;
var eqPathSegmentNZ = Data_String_NonEmpty.eqNonEmptyString;
var eqPathSegment = Data_Eq.eqString;
module.exports = {
    segmentFromString: segmentFromString,
    segmentToString: segmentToString,
    unsafeSegmentFromString: unsafeSegmentFromString,
    unsafeSegmentToString: unsafeSegmentToString,
    parseSegment: parseSegment,
    printSegment: printSegment,
    segmentNZFromString: segmentNZFromString,
    segmentNZToString: segmentNZToString,
    unsafeSegmentNZFromString: unsafeSegmentNZFromString,
    unsafeSegmentNZToString: unsafeSegmentNZToString,
    parseSegmentNZ: parseSegmentNZ,
    printSegmentNZ: printSegmentNZ,
    segmentNZNCFromString: segmentNZNCFromString,
    segmentNZNCToString: segmentNZNCToString,
    unsafeSegmentNZNCFromString: unsafeSegmentNZNCFromString,
    unsafeSegmentNZNCToString: unsafeSegmentNZNCToString,
    parseSegmentNZNC: parseSegmentNZNC,
    printSegmentNZNC: printSegmentNZNC,
    segmentChar: segmentChar,
    segmentNCChar: segmentNCChar,
    eqPathSegment: eqPathSegment,
    ordPathSegment: ordPathSegment,
    showPathSegment: showPathSegment,
    eqPathSegmentNZ: eqPathSegmentNZ,
    ordPathSegmentNZ: ordPathSegmentNZ,
    showPathSegmentNZ: showPathSegmentNZ,
    eqPathSegmentNZNC: eqPathSegmentNZNC,
    ordPathSegmentNZNC: ordPathSegmentNZNC,
    showPathSegmentNZNC: showPathSegmentNZNC
};
