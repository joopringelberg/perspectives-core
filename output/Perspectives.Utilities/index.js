// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Data_Maybe = require("../Data.Maybe");
var Prelude = require("../Prelude");
var onNothing$prime = function (dictMonadThrow) {
    return function (s) {
        return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(dictMonadThrow)(s))(Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0()));
    };
};
var onNothing = function (dictMonadThrow) {
    return function (s) {
        return function (ma) {
            return Control_Bind.bind((dictMonadThrow.Monad0()).Bind1())(ma)(Data_Maybe.maybe(Control_Monad_Error_Class.throwError(dictMonadThrow)(s))(Control_Applicative.pure((dictMonadThrow.Monad0()).Applicative0())));
        };
    };
};
var maybeM = function (dictMonad) {
    return function ($$default) {
        return function (fromJust) {
            return function (monadicValue) {
                return Control_Bind.bind(dictMonad.Bind1())(monadicValue)(function (v) {
                    if (v instanceof Data_Maybe.Nothing) {
                        return $$default;
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return fromJust(v.value0);
                    };
                    throw new Error("Failed pattern match at Perspectives.Utilities line 16, column 3 - line 18, column 27: " + [ v.constructor.name ]);
                });
            };
        };
    };
};
var ifNothing = function (dictMonad) {
    return function (monadicValue) {
        return function ($$default) {
            return function (fromJust) {
                return maybeM(dictMonad)($$default)(fromJust)(monadicValue);
            };
        };
    };
};
module.exports = {
    onNothing: onNothing,
    "onNothing'": onNothing$prime,
    maybeM: maybeM,
    ifNothing: ifNothing
};
