// Generated by purs version 0.11.7
"use strict";
var Data_Array = require("../Data.Array");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Maybe = require("../Data.Maybe");
var Data_Ord = require("../Data.Ord");
var Data_StrMap = require("../Data.StrMap");
var Partial_Unsafe = require("../Partial.Unsafe");
var Perspectives_EntiteitAndRDFAliases = require("../Perspectives.EntiteitAndRDFAliases");
var Perspectives_Identifiers = require("../Perspectives.Identifiers");
var Perspectives_Syntax = require("../Perspectives.Syntax");
var Prelude = require("../Prelude");
var setRol_property = function (v) {
    return function (propertyName) {
        return function (value) {
            var v1 = Data_StrMap.lookup(propertyName)(v.properties);
            if (v1 instanceof Data_Maybe.Nothing) {
                var $81 = {};
                for (var $82 in v) {
                    if ({}.hasOwnProperty.call(v, $82)) {
                        $81[$82] = v[$82];
                    };
                };
                $81.properties = Data_StrMap.insert(propertyName)({
                    value: [ value ],
                    commentBefore: [  ],
                    commentAfter: [  ]
                })(v.properties);
                return $81;
            };
            if (v1 instanceof Data_Maybe.Just) {
                var $87 = {};
                for (var $88 in v) {
                    if ({}.hasOwnProperty.call(v, $88)) {
                        $87[$88] = v[$88];
                    };
                };
                $87.properties = Data_StrMap.insert(propertyName)((function () {
                    var $84 = {};
                    for (var $85 in v1.value0) {
                        if ({}.hasOwnProperty.call(v1.value0, $85)) {
                            $84[$85] = v1["value0"][$85];
                        };
                    };
                    $84.value = [ value ];
                    return $84;
                })())(v.properties);
                return $87;
            };
            throw new Error("Failed pattern match at Perspectives.ContextAndRole line 180, column 3 - line 189, column 22: " + [ v1.constructor.name ]);
        };
    };
};
var setContext_rolInContext = function (v) {
    return function (rolName) {
        return function (rolID) {
            var $95 = {};
            for (var $96 in v) {
                if ({}.hasOwnProperty.call(v, $96)) {
                    $95[$96] = v[$96];
                };
            };
            $95.rolInContext = Data_StrMap.insert(rolName)([ rolID ])(v.rolInContext);
            return $95;
        };
    };
};
var rol_rev$prime = function (v) {
    return v._rev;
};
var rol_rev = function (v) {
    return v._rev;
};
var rol_pspType = function (v) {
    return v.pspType;
};
var rol_properties = function (v) {
    return v.properties;
};
var rol_occurrence = function (v) {
    return v.occurrence;
};
var rol_id = function (v) {
    return v._id;
};
var rol_gevuldeRollen = function (v) {
    return v.gevuldeRollen;
};
var rol_context = function (v) {
    return v.context;
};
var rol_comments = function (v) {
    return v.comments;
};
var rol_binding = function (v) {
    return v.binding;
};
var removeRol_property = function (v) {
    return function (propertyName) {
        return function (value) {
            var v1 = Data_StrMap.lookup(propertyName)(v.properties);
            if (v1 instanceof Data_Maybe.Nothing) {
                return v;
            };
            if (v1 instanceof Data_Maybe.Just) {
                var v2 = Data_Array.elemIndex(Data_Eq.eqString)(value)(v1.value0.value);
                if (v2 instanceof Data_Maybe.Nothing) {
                    return v;
                };
                var $127 = {};
                for (var $128 in v) {
                    if ({}.hasOwnProperty.call(v, $128)) {
                        $127[$128] = v[$128];
                    };
                };
                $127.properties = Data_StrMap.insert(propertyName)((function () {
                    var $124 = {};
                    for (var $125 in v1.value0) {
                        if ({}.hasOwnProperty.call(v1.value0, $125)) {
                            $124[$125] = v1["value0"][$125];
                        };
                    };
                    $124.value = Data_Array["delete"](Data_Eq.eqString)(value)(v1.value0.value);
                    return $124;
                })())(v.properties);
                return $127;
            };
            throw new Error("Failed pattern match at Perspectives.ContextAndRole line 168, column 3 - line 176, column 22: " + [ v1.constructor.name ]);
        };
    };
};
var removeRol_gevuldeRollen = function (v) {
    return function (rolName) {
        return function (rolID) {
            var v1 = Data_StrMap.lookup(rolName)(v.gevuldeRollen);
            if (v1 instanceof Data_Maybe.Nothing) {
                return v;
            };
            if (v1 instanceof Data_Maybe.Just) {
                var v2 = Data_Array.elemIndex(Data_Eq.eqString)(rolID)(v1.value0);
                if (v2 instanceof Data_Maybe.Nothing) {
                    return v;
                };
                var $138 = {};
                for (var $139 in v) {
                    if ({}.hasOwnProperty.call(v, $139)) {
                        $138[$139] = v[$139];
                    };
                };
                $138.gevuldeRollen = Data_StrMap.insert(rolName)(Data_Array["delete"](Data_Eq.eqString)(rolID)(v1.value0))(v.gevuldeRollen);
                return $138;
            };
            throw new Error("Failed pattern match at Perspectives.ContextAndRole line 205, column 3 - line 210, column 104: " + [ v1.constructor.name ]);
        };
    };
};
var removeContext_rolInContext = function (v) {
    return function (rolName) {
        return function (rolID) {
            var v1 = Data_StrMap.lookup(rolName)(v.rolInContext);
            if (v1 instanceof Data_Maybe.Nothing) {
                return v;
            };
            if (v1 instanceof Data_Maybe.Just) {
                var v2 = Data_Array.elemIndex(Data_Eq.eqString)(rolID)(v1.value0);
                if (v2 instanceof Data_Maybe.Nothing) {
                    return v;
                };
                var $148 = {};
                for (var $149 in v) {
                    if ({}.hasOwnProperty.call(v, $149)) {
                        $148[$149] = v[$149];
                    };
                };
                $148.rolInContext = Data_StrMap.insert(rolName)(Data_Array["delete"](Data_Eq.eqString)(rolID)(v1.value0))(v.rolInContext);
                return $148;
            };
            throw new Error("Failed pattern match at Perspectives.ContextAndRole line 68, column 3 - line 73, column 106: " + [ v1.constructor.name ]);
        };
    };
};
var defaultComments = {
    commentBefore: [  ],
    commentAfter: [  ]
};
var defaultRolRecord = {
    _id: "",
    pspType: "",
    context: "",
    _rev: Data_Maybe.Nothing.value,
    binding: Data_Maybe.Nothing.value,
    properties: Data_StrMap.empty,
    gevuldeRollen: Data_StrMap.empty,
    occurrence: 0,
    comments: defaultComments
};
var defaultContextRecord = {
    _id: "",
    _rev: Data_Maybe.Nothing.value,
    displayName: "",
    pspType: "",
    binnenRol: defaultRolRecord,
    buitenRol: "",
    rolInContext: Data_StrMap.empty,
    comments: defaultComments
};
var context_rolInContext = function (v) {
    return v.rolInContext;
};
var context_rev$prime = function (v) {
    return v._rev;
};
var context_rev = function (v) {
    return v._rev;
};
var context_pspType = function (v) {
    return v.pspType;
};
var context_id = function (v) {
    return v._id;
};
var context_displayName = function (v) {
    return v.displayName;
};
var context_comments = function (v) {
    return v.comments;
};
var context_buitenRol = function (v) {
    return v.buitenRol;
};
var context_binnenRol = function (v) {
    return v.binnenRol;
};
var context_Namespace = function (v) {
    return Data_Maybe.fromJust()(Perspectives_Identifiers.deconstructNamespace(v._id));
};
var compareOccurrences = function (a) {
    return function (b) {
        return Data_Ord.compare(Data_Ord.ordInt)(rol_occurrence(a))(rol_occurrence(b));
    };
};
var changeRol_type = function (tp) {
    return function (v) {
        return Perspectives_Syntax.PerspectRol((function () {
            var $175 = {};
            for (var $176 in v) {
                if ({}.hasOwnProperty.call(v, $176)) {
                    $175[$176] = v[$176];
                };
            };
            $175.pspType = tp;
            return $175;
        })());
    };
};
var changeRol_rev$prime = function (rev) {
    return function (v) {
        return Perspectives_Syntax.PerspectRol((function () {
            var $180 = {};
            for (var $181 in v) {
                if ({}.hasOwnProperty.call(v, $181)) {
                    $180[$181] = v[$181];
                };
            };
            $180._rev = rev;
            return $180;
        })());
    };
};
var changeRol_rev = function (rev) {
    return function (v) {
        return Perspectives_Syntax.PerspectRol((function () {
            var $185 = {};
            for (var $186 in v) {
                if ({}.hasOwnProperty.call(v, $186)) {
                    $185[$186] = v[$186];
                };
            };
            $185._rev = new Data_Maybe.Just(rev);
            return $185;
        })());
    };
};
var changeRol_context = function (cid) {
    return function (v) {
        var $190 = {};
        for (var $191 in v) {
            if ({}.hasOwnProperty.call(v, $191)) {
                $190[$191] = v[$191];
            };
        };
        $190.context = cid;
        return $190;
    };
};
var changeRol_binding = function (b) {
    return function (v) {
        return Perspectives_Syntax.PerspectRol((function () {
            var $195 = {};
            for (var $196 in v) {
                if ({}.hasOwnProperty.call(v, $196)) {
                    $195[$196] = v[$196];
                };
            };
            $195.binding = new Data_Maybe.Just(b);
            return $195;
        })());
    };
};
var changeContext_type = function (tp) {
    return function (v) {
        return Perspectives_Syntax.PerspectContext((function () {
            var $200 = {};
            for (var $201 in v) {
                if ({}.hasOwnProperty.call(v, $201)) {
                    $200[$201] = v[$201];
                };
            };
            $200.pspType = tp;
            return $200;
        })());
    };
};
var changeContext_rev$prime = function (rev) {
    return function (v) {
        return Perspectives_Syntax.PerspectContext((function () {
            var $205 = {};
            for (var $206 in v) {
                if ({}.hasOwnProperty.call(v, $206)) {
                    $205[$206] = v[$206];
                };
            };
            $205._rev = rev;
            return $205;
        })());
    };
};
var changeContext_rev = function (rev) {
    return function (v) {
        return Perspectives_Syntax.PerspectContext((function () {
            var $210 = {};
            for (var $211 in v) {
                if ({}.hasOwnProperty.call(v, $211)) {
                    $210[$211] = v[$211];
                };
            };
            $210._rev = new Data_Maybe.Just(rev);
            return $210;
        })());
    };
};
var changeContext_id = function (id) {
    return function (v) {
        return Perspectives_Syntax.PerspectContext((function () {
            var $215 = {};
            for (var $216 in v) {
                if ({}.hasOwnProperty.call(v, $216)) {
                    $215[$216] = v[$216];
                };
            };
            $215._id = id;
            return $215;
        })());
    };
};
var changeContext_displayName = function (dn) {
    return function (v) {
        return Perspectives_Syntax.PerspectContext((function () {
            var $220 = {};
            for (var $221 in v) {
                if ({}.hasOwnProperty.call(v, $221)) {
                    $220[$221] = v[$221];
                };
            };
            $220.displayName = dn;
            return $220;
        })());
    };
};
var addRol_property = function (v) {
    return function (propertyName) {
        return function (value) {
            var v1 = Data_StrMap.lookup(propertyName)(v.properties);
            if (v1 instanceof Data_Maybe.Nothing) {
                var $227 = {};
                for (var $228 in v) {
                    if ({}.hasOwnProperty.call(v, $228)) {
                        $227[$228] = v[$228];
                    };
                };
                $227.properties = Data_StrMap.insert(propertyName)({
                    value: [ value ],
                    commentBefore: [  ],
                    commentAfter: [  ]
                })(v.properties);
                return $227;
            };
            if (v1 instanceof Data_Maybe.Just) {
                var v2 = Data_Array.elemIndex(Data_Eq.eqString)(value)(v1.value0.value);
                if (v2 instanceof Data_Maybe.Nothing) {
                    var $234 = {};
                    for (var $235 in v) {
                        if ({}.hasOwnProperty.call(v, $235)) {
                            $234[$235] = v[$235];
                        };
                    };
                    $234.properties = Data_StrMap.insert(propertyName)((function () {
                        var $231 = {};
                        for (var $232 in v1.value0) {
                            if ({}.hasOwnProperty.call(v1.value0, $232)) {
                                $231[$232] = v1["value0"][$232];
                            };
                        };
                        $231.value = Data_Array.cons(value)(v1.value0.value);
                        return $231;
                    })())(v.properties);
                    return $234;
                };
                return v;
            };
            throw new Error("Failed pattern match at Perspectives.ContextAndRole line 153, column 3 - line 164, column 24: " + [ v1.constructor.name ]);
        };
    };
};
var addRol_gevuldeRollen = function (v) {
    return function (rolName) {
        return function (rolID) {
            var v1 = Data_StrMap.lookup(rolName)(v.gevuldeRollen);
            if (v1 instanceof Data_Maybe.Nothing) {
                var $244 = {};
                for (var $245 in v) {
                    if ({}.hasOwnProperty.call(v, $245)) {
                        $244[$245] = v[$245];
                    };
                };
                $244.gevuldeRollen = Data_StrMap.insert(rolName)([ rolID ])(v.gevuldeRollen);
                return $244;
            };
            if (v1 instanceof Data_Maybe.Just) {
                var v2 = Data_Array.elemIndex(Data_Eq.eqString)(rolID)(v1.value0);
                if (v2 instanceof Data_Maybe.Nothing) {
                    var $248 = {};
                    for (var $249 in v) {
                        if ({}.hasOwnProperty.call(v, $249)) {
                            $248[$249] = v[$249];
                        };
                    };
                    $248.gevuldeRollen = Data_StrMap.insert(rolName)(Data_Array.cons(rolID)(v1.value0))(v.gevuldeRollen);
                    return $248;
                };
                return v;
            };
            throw new Error("Failed pattern match at Perspectives.ContextAndRole line 196, column 3 - line 201, column 24: " + [ v1.constructor.name ]);
        };
    };
};
var addContext_rolInContext = function (v) {
    return function (rolName) {
        return function (rolID) {
            var v1 = Data_StrMap.lookup(rolName)(v.rolInContext);
            if (v1 instanceof Data_Maybe.Nothing) {
                var $257 = {};
                for (var $258 in v) {
                    if ({}.hasOwnProperty.call(v, $258)) {
                        $257[$258] = v[$258];
                    };
                };
                $257.rolInContext = Data_StrMap.insert(rolName)([ rolID ])(v.rolInContext);
                return $257;
            };
            if (v1 instanceof Data_Maybe.Just) {
                var v2 = Data_Array.elemIndex(Data_Eq.eqString)(rolID)(v1.value0);
                if (v2 instanceof Data_Maybe.Nothing) {
                    var $261 = {};
                    for (var $262 in v) {
                        if ({}.hasOwnProperty.call(v, $262)) {
                            $261[$262] = v[$262];
                        };
                    };
                    $261.rolInContext = Data_StrMap.insert(rolName)(Data_Array.cons(rolID)(v1.value0))(v.rolInContext);
                    return $261;
                };
                return v;
            };
            throw new Error("Failed pattern match at Perspectives.ContextAndRole line 59, column 3 - line 64, column 24: " + [ v1.constructor.name ]);
        };
    };
};
module.exports = {
    context_id: context_id,
    context_Namespace: context_Namespace,
    changeContext_id: changeContext_id,
    context_rev: context_rev,
    changeContext_rev: changeContext_rev,
    "context_rev'": context_rev$prime,
    "changeContext_rev'": changeContext_rev$prime,
    context_displayName: context_displayName,
    changeContext_displayName: changeContext_displayName,
    context_pspType: context_pspType,
    changeContext_type: changeContext_type,
    context_binnenRol: context_binnenRol,
    context_buitenRol: context_buitenRol,
    context_rolInContext: context_rolInContext,
    addContext_rolInContext: addContext_rolInContext,
    removeContext_rolInContext: removeContext_rolInContext,
    setContext_rolInContext: setContext_rolInContext,
    context_comments: context_comments,
    defaultContextRecord: defaultContextRecord,
    defaultComments: defaultComments,
    defaultRolRecord: defaultRolRecord,
    rol_id: rol_id,
    rol_rev: rol_rev,
    changeRol_rev: changeRol_rev,
    "rol_rev'": rol_rev$prime,
    "changeRol_rev'": changeRol_rev$prime,
    rol_occurrence: rol_occurrence,
    rol_pspType: rol_pspType,
    changeRol_type: changeRol_type,
    rol_binding: rol_binding,
    changeRol_binding: changeRol_binding,
    rol_context: rol_context,
    changeRol_context: changeRol_context,
    rol_properties: rol_properties,
    addRol_property: addRol_property,
    removeRol_property: removeRol_property,
    setRol_property: setRol_property,
    rol_gevuldeRollen: rol_gevuldeRollen,
    addRol_gevuldeRollen: addRol_gevuldeRollen,
    removeRol_gevuldeRollen: removeRol_gevuldeRollen,
    rol_comments: rol_comments,
    compareOccurrences: compareOccurrences
};
