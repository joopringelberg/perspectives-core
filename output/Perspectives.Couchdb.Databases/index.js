// Generated by purs version 0.11.7
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans");
var Control_Monad_Trans_Class = require("../Control.Monad.Trans.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Argonaut = require("../Data.Argonaut");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HTTP_Method = require("../Data.HTTP.Method");
var Data_Map = require("../Data.Map");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Semigroup = require("../Data.Semigroup");
var Data_StrMap = require("../Data.StrMap");
var Data_String = require("../Data.String");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Network_HTTP_Affjax = require("../Network.HTTP.Affjax");
var Network_HTTP_Affjax_Request = require("../Network.HTTP.Affjax.Request");
var Network_HTTP_Affjax_Response = require("../Network.HTTP.Affjax.Response");
var Network_HTTP_RequestHeader = require("../Network.HTTP.RequestHeader");
var Network_HTTP_ResponseHeader = require("../Network.HTTP.ResponseHeader");
var Network_HTTP_StatusCode = require("../Network.HTTP.StatusCode");
var Perspectives_CoreTypes = require("../Perspectives.CoreTypes");
var Perspectives_Couchdb = require("../Perspectives.Couchdb");
var Perspectives_Effects = require("../Perspectives.Effects");
var Perspectives_EntiteitAndRDFAliases = require("../Perspectives.EntiteitAndRDFAliases");
var Perspectives_PerspectivesState = require("../Perspectives.PerspectivesState");
var Perspectives_User = require("../Perspectives.User");
var Prelude = require("../Prelude");
var qualifyRequest = function (v) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectivesState.tryReadSessionCookieValue)(function (v1) {
        if (v1 instanceof Data_Maybe.Just && v1.value0 !== "Browser") {
            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(v);
        };
        if (v1 instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))((function () {
                var $34 = {};
                for (var $35 in v) {
                    if ({}.hasOwnProperty.call(v, $35)) {
                        $34[$35] = v[$35];
                    };
                };
                $34.headers = Data_Array.cons(new Network_HTTP_RequestHeader.RequestHeader("Cookie", v1.value0))(v.headers);
                return $34;
            })());
        };
        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(v);
    });
};
var logout = Data_Functor["void"](Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Aff.functorAff))(Perspectives_PerspectivesState.takeSessionCookieValue);
var defaultPerspectRequest = qualifyRequest({
    method: new Data_Either.Left(Data_HTTP_Method.GET.value),
    url: "http://localhost:5984/",
    headers: [  ],
    content: Data_Maybe.Nothing.value,
    username: Data_Maybe.Nothing.value,
    password: Data_Maybe.Nothing.value,
    withCredentials: true
});
var requestAuthentication$prime = function (usr) {
    return function (pwd) {
        var saveCookie = function (headers) {
            var v = Data_Foldable.find(Data_Foldable.foldableArray)(function (rh) {
                return Network_HTTP_ResponseHeader.responseHeaderName(rh) === "Set-Cookie";
            })(headers);
            if (v instanceof Data_Maybe.Nothing) {
                return Perspectives_PerspectivesState.setSessionCookie("Browser");
            };
            if (v instanceof Data_Maybe.Just) {
                return Perspectives_PerspectivesState.setSessionCookie(Network_HTTP_ResponseHeader.responseHeaderValue(v.value0));
            };
            throw new Error("Failed pattern match at Perspectives.Couchdb.Databases line 93, column 24 - line 98, column 47: " + [ v.constructor.name ]);
        };
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_User.getCouchdbBaseURL)(function (v) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(defaultPerspectRequest)(function (v1) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Network_HTTP_Affjax.affjax(Network_HTTP_Affjax_Request.requestableJson)(Perspectives_Couchdb.respondablePostCouchdb_session)((function () {
                    var $43 = {};
                    for (var $44 in v1) {
                        if ({}.hasOwnProperty.call(v1, $44)) {
                            $43[$44] = v1[$44];
                        };
                    };
                    $43.method = new Data_Either.Left(Data_HTTP_Method.POST.value);
                    $43.url = v + "_session";
                    $43.content = new Data_Maybe.Just(Data_Argonaut_Core.fromObject(Data_StrMap.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("name", Data_Argonaut_Core.fromString(usr)), new Data_Tuple.Tuple("password", Data_Argonaut_Core.fromString(pwd)) ])));
                    return $43;
                })())))(function (v2) {
                    if (v2.status === 200) {
                        return saveCookie(v2.headers);
                    };
                    if (v2.status === 203) {
                        return saveCookie(v2.headers);
                    };
                    return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Control_Monad_Eff_Exception.error("Failure in authenticate. Unauthorized. Username or password wasn\u2019t recognized"));
                });
            });
        });
    };
};
var requestAuthentication = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectivesState.takeSessionCookieValue)(function (v) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_User.getUser)(function (v1) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_User.getCouchdbPassword)(function (v2) {
            return requestAuthentication$prime(v1)(v2);
        });
    });
});
var retrieveDocumentVersion = function (url) {
    var removeDoubleQuotes = function (s) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_String.stripPrefix("\"")(s)))(function (v) {
            if (v instanceof Data_Maybe.Nothing) {
                return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Control_Monad_Eff_Exception.error("retrieveDocumentVersion: couchdb returns ETag value that is not a valid JSON string for " + url));
            };
            if (v instanceof Data_Maybe.Just) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_String.stripSuffix("\"")(v.value0)))(function (v1) {
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Control_Monad_Eff_Exception.error("retrieveDocumentVersion: couchdb returns ETag value that is not a double quoted string for " + url));
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(v1.value0);
                    };
                    throw new Error("Failed pattern match at Perspectives.Couchdb.Databases line 177, column 11 - line 179, column 31: " + [ v1.constructor.name ]);
                });
            };
            throw new Error("Failed pattern match at Perspectives.Couchdb.Databases line 173, column 7 - line 179, column 31: " + [ v.constructor.name ]);
        });
    };
    var version = function (headers) {
        var v = Data_Foldable.find(Data_Foldable.foldableArray)(function (rh) {
            return Network_HTTP_ResponseHeader.responseHeaderName(rh) === "ETag";
        })(headers);
        if (v instanceof Data_Maybe.Nothing) {
            return Control_Monad_Error_Class.throwError(Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Aff.monadThrowAff))(Control_Monad_Eff_Exception.error("retrieveDocumentVersion: couchdb returns no ETag header holding a document version number for " + url));
        };
        if (v instanceof Data_Maybe.Just) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Network_HTTP_ResponseHeader.responseHeaderValue(v.value0)))(removeDoubleQuotes);
        };
        throw new Error("Failed pattern match at Perspectives.Couchdb.Databases line 166, column 24 - line 168, column 72: " + [ v.constructor.name ]);
    };
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(defaultPerspectRequest)(function (v) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Network_HTTP_Affjax.affjax(Network_HTTP_Affjax_Request.requestableUnit)(Network_HTTP_Affjax_Response.responsableUnit)((function () {
            var $59 = {};
            for (var $60 in v) {
                if ({}.hasOwnProperty.call(v, $60)) {
                    $59[$60] = v[$60];
                };
            };
            $59.method = new Data_Either.Left(Data_HTTP_Method.HEAD.value);
            $59.url = url;
            return $59;
        })())))(function (v1) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(version(v1.headers))(function (v2) {
                return Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Perspectives_Couchdb.onAccepted(Control_Monad_Aff.monadErrorAff)(v1.status)([ 200, 304 ])("retrieveDocumentVersion")(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(v2)));
            });
        });
    });
};
var databaseStatusCodes = Data_Map.fromFoldable(Data_Ord.ordInt)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(400, "Bad Request. Invalid database name."), new Data_Tuple.Tuple(401, "Unauthorized. CouchDB Server Administrator privileges required.") ]);
var authenticate = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectivesState.sessionCookie)(function ($83) {
    return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.isEmptyVar($83));
}))(function (v) {
    if (v) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectivesState.sessionCookie)(function ($84) {
            return Data_Functor["void"](Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Aff.functorAff))(Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.readVar($84)));
        });
    };
    return requestAuthentication;
});
var ensureAuthentication = function (a) {
    var predicate = function (e) {
        var $66 = Control_Monad_Eff_Exception.message(e) === "UNAUTHORIZED";
        if ($66) {
            return new Data_Maybe.Just(Data_Unit.unit);
        };
        return Data_Maybe.Nothing.value;
    };
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_PerspectivesState.sessionCookie)(function ($85) {
        return Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(Control_Monad_Aff_AVar.isEmptyVar($85));
    }))(function (v) {
        if (v) {
            return Control_Apply.applySecond(Control_Monad_Reader_Trans.applyReaderT(Control_Monad_Aff.applyAff))(authenticate)(a);
        };
        return Control_Monad_Error_Class.catchJust(Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Aff.monadErrorAff))(predicate)(a)(Data_Function["const"](Control_Apply.applySecond(Control_Monad_Reader_Trans.applyReaderT(Control_Monad_Aff.applyAff))(authenticate)(a)));
    });
};
var createDatabase = function (dbname) {
    var createStatusCodes = Data_Map.insert(Data_Ord.ordInt)(412)("Precondition failed. Database already exists.")(databaseStatusCodes);
    return ensureAuthentication(Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_User.getCouchdbBaseURL)(function (v) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(defaultPerspectRequest)(function (v1) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Network_HTTP_Affjax.affjax(Network_HTTP_Affjax_Request.requestableUnit)(Network_HTTP_Affjax_Response.responsableString)((function () {
                var $71 = {};
                for (var $72 in v1) {
                    if ({}.hasOwnProperty.call(v1, $72)) {
                        $71[$72] = v1[$72];
                    };
                };
                $71.method = new Data_Either.Left(Data_HTTP_Method.PUT.value);
                $71.url = v + dbname;
                return $71;
            })())))(function (v2) {
                return Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Perspectives_Couchdb["onAccepted'"](Control_Monad_Aff.monadErrorAff)(createStatusCodes)(v2.status)([ 201 ])("createDatabase")(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit)));
            });
        });
    }));
};
var deleteDatabase = function (dbname) {
    var deleteStatusCodes = Data_Map.insert(Data_Ord.ordInt)(412)("Precondition failed. Database does not exist.")(databaseStatusCodes);
    return ensureAuthentication(Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_User.getCouchdbBaseURL)(function (v) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(defaultPerspectRequest)(function (v1) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Network_HTTP_Affjax.affjax(Network_HTTP_Affjax_Request.requestableUnit)(Network_HTTP_Affjax_Response.responsableString)((function () {
                var $77 = {};
                for (var $78 in v1) {
                    if ({}.hasOwnProperty.call(v1, $78)) {
                        $77[$78] = v1[$78];
                    };
                };
                $77.method = new Data_Either.Left(Data_HTTP_Method.DELETE.value);
                $77.url = v + dbname;
                return $77;
            })())))(function (v2) {
                return Control_Monad_Aff_Class.liftAff(Control_Monad_Aff_Class.monadAffReader(Control_Monad_Aff_Class.monadAffAff))(Perspectives_Couchdb["onAccepted'"](Control_Monad_Aff.monadErrorAff)(deleteStatusCodes)(v2.status)([ 200 ])("deleteDatabase")(Control_Applicative.pure(Control_Monad_Aff.applicativeAff)(Data_Unit.unit)));
            });
        });
    }));
};
var allDbs = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Perspectives_User.getCouchdbBaseURL)(function (v) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Aff.bindAff))(Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Aff.monadAff)(Network_HTTP_Affjax.get(Perspectives_Couchdb.respondableDBS)(v + "_all_dbs")))(function (v1) {
        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Aff.applicativeAff))(Data_Newtype.unwrap(Perspectives_Couchdb.newtypeDBS)(v1.response));
    });
});
module.exports = {
    qualifyRequest: qualifyRequest,
    defaultPerspectRequest: defaultPerspectRequest,
    authenticate: authenticate,
    requestAuthentication: requestAuthentication,
    "requestAuthentication'": requestAuthentication$prime,
    ensureAuthentication: ensureAuthentication,
    logout: logout,
    databaseStatusCodes: databaseStatusCodes,
    createDatabase: createDatabase,
    deleteDatabase: deleteDatabase,
    allDbs: allDbs,
    retrieveDocumentVersion: retrieveDocumentVersion
};
