-- QUERY ABSTRACT SYNTAX TREE
-- intern $resultaatType = $operand1 >-> psp:type >-> $resultaatType
Context model:QueryAst als q:
import model:Perspectives als psp:

Section psp:rolInContext

psp:Context q:Query
	psp:internalProperty =>
		psp:Property $resultaatType
			extern psp:isFunctioneel = true
			extern psp:isVerplicht = true
			extern psp:range = String

q:Query q:RolQuery
	intern $resultaatType = "entiteitID"

q:Query q:PropertyQuery
	intern $resultaatType = "simpleValue"
	psp:internalProperty =>
		psp:Property $valueType
			extern psp:isFunctioneel = true
			extern psp:isVerplicht = true
			extern psp:range = String

psp:Context q:RolGetter
	psp:rolInContext =>
		psp:Rol $rol

psp:Context q:SystemMethod
q:SystemMethod q:laatste

-- Het resultaatType van een met UnaryCombinator samengestelde query is gelijk aan
-- dat van zijn argument.
psp:Context q:UnaryCombinator
	psp:rolInContext =>
		psp:Rol $query
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:Query
	psp:rolInContext =>
		psp:Rol $method
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:SystemMethod

q:UnaryCombinator q:berekenLaatste
	$method => q:laatste

-- We hebben een query nodig met de lokale naam "resultaatType" waar we altijd naar kunnen verwijzen.
q:PropertyQuery q:resultaatType
	intern $valueType = "string"

-- Compose heeft een berekende property 'resultaatType', die de waarde van de gelijknamige
-- property van de laatste operand heeft.
q:Query q:compose
	psp:internalProperty =>
		q:compose $resultaatType
			$operand (1) =>
				q:berekenLaatste $laatsteOperand
					$query => $$$operand
			$operand (2) => q:resultaatType
	psp:rolInContext =>
		psp:Rol $operand
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:Query

q:PropertyQuery q:Criterium
	intern $valueType = "boolean"

q:RolQuery q:binding
q:RolQuery psp:type
