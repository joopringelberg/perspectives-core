
{-
This model gives definitions for basic queries such as "binding", query constructors such as
constructInternalPropertyGetter and combinators such as compose and filter.
Any query can be described using these definitions.
-}

Context model:QueryAst als q:
import model:Perspectives als psp:

Section psp:rolInContext

psp:Context q:Query
	psp:internalProperty =>
		psp:Property $resultaatType
			extern psp:isFunctioneel = true
			extern psp:isVerplicht = true
			extern psp:range = String

q:Query q:RolQuery
	intern $resultaatType = "entiteitID"

q:Query q:PropertyQuery
	intern $resultaatType = "simpleValue"
	psp:internalProperty =>
		psp:Property $valueType
			extern psp:isFunctioneel = true
			extern psp:isVerplicht = true
			extern psp:range = String

-- We need a query with the local name "resultaatType" that we can refer to from any position.
q:PropertyQuery q:resultaatType
	intern $valueType = "string"

--------------------------------------------------------------------------------
-- SYSTEM GETTERS
--------------------------------------------------------------------------------
q:query q:identity -- Can yield both a Rol ID and Context ID!
q:RolQuery q:contextType
q:RolQuery q:buitenRol
q:RolQuery q:iedereRolInContext
q:RolQuery q:rolTypen
q:RolQuery q:rolType
q:RolQuery q:binding
q:Query q:context -- Should be a ContextQuery but we do not have that.
q:PropertyQuery q:label

--------------------------------------------------------------------------------
-- QUERY CONSTRUCTORS
--------------------------------------------------------------------------------
q:Context q:constructExternalPropertyGetter
	psp:rolInContext =>
		psp:Rol $property
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Property

q:Context q:constructExternalPropertyLookup
	psp:rolInContext =>
		psp:Rol $property
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Property

q:Context q:constructInternalPropertyGetter
	psp:rolInContext =>
		psp:Rol $property
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Property

q:Context q:constructInternalPropertyLookup
	psp:rolInContext =>
		psp:Rol $property
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Property

q:Context q:constructRolPropertyGetter
	psp:rolInContext =>
		psp:Rol $property
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Property

q:Context q:constructRolPropertyLookup
	psp:rolInContext =>
		psp:Rol $property
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Property

q:Context q:constructRolGetter
	psp:rolInContext =>
		psp:Rol $rol
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Rol

q:Context q:constructRolLookup
	psp:rolInContext =>
		psp:Rol $rol
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Rol

q:Context q:constructInverseRolGetter
	psp:rolInContext =>
		psp:Rol $rol
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Rol

-- It is unlikely we will use this constructor in a model.
q:Context q:rolesOf
	psp:rolInContext =>
		psp:Rol $context
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Context

--------------------------------------------------------------------------------
-- COMBINATORS
--------------------------------------------------------------------------------
q:Query q:laatste
	psp:internalProperty =>
		q:compose $resultaatType
			$operand (1) => $$query
			$operand (2) =>
				q:constructInternalPropertyGetter $x
					$property => q:resultaatType
	psp:rolInContext =>
		psp:Rol $query
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:Query

-- The computed property 'resultaatType' returns the value of the property of the same name
-- of the last operand.
q:Query q:compose
	psp:internalProperty =>
		q:compose $resultaatType
			$operand (1) =>
				q:laatste $laatsteOperand
					$query => $$$operand
			$operand (2) =>
				q:constructInternalPropertyGetter $x
					$property => q:resultaatType
	psp:rolInContext =>
		psp:Rol $operand
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:Query

q:PropertyQuery q:Criterium
	intern $valueType = "boolean"

q:Criterium q:notEmpty
	psp:rolInContext =>
		psp:Rol $query
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:Query

q:RolQuery q:closure
	psp:rolInContext =>
		psp:Rol $query
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:RolQuery

q:RolQuery q:closure'
	psp:rolInContext =>
	 	psp:Rol $query
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:RolQuery

q:RolQuery q:filter
	psp:rolInContext =>
	 	psp:Rol $criterium
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:Criterium
	psp:rolInContext =>
		psp:Rol $candidates
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding q:RolQuery

q:Query q:concat
	psp:internalProperty =>
		q:compose $resultaatType
			$operand (1) => $$operand
			$operand (2) =>
				q:constructInternalPropertyGetter $x
					$property => q:resultaatType
	psp:rolInContext =>
		psp:Rol $operand
			extern psp:isFunctioneel = false
			psp:mogelijkeBinding q:Query

--------------------------------------------------------------------------------
-- COMBINATOR CONSTRUCTORS
--------------------------------------------------------------------------------
-- It is unlikely we will use this constructor in a model.
q:Context q:contains
	psp:rolInContext =>
		psp:Rol $valueOrId
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => psp:Context
	psp:rolInContext =>
		psp:Rol $query
			extern psp:isFunctioneel = true
			psp:mogelijkeBinding => q:Query
