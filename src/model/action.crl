Context model:ActionAst als a:

import model:Perspectives als psp:

Section psp:Context$rolInContext

--------------------------------------------------------------------------------
-- ASSIGNMENT
--------------------------------------------------------------------------------
-- We add to the context of the actie that this statement occurs in.
-- addRol :: forall e. ContextID -> RolName -> RolID -> MonadTransactie e Unit
-- Apply like this for the statement: "getuige += verdachte":
--	assignToRol <gen>
--		extern $operation = "add"
--		$rol => pol:Aangifte$getuige
--		$value =>
--			q:constructRolLookup <gen>
--				$rol => pol:Aangifte$verdachte
psp:Context a:assignToRol
	$buitenRolBeschrijving =>
		psp:Rol $buitenRolBeschrijving
			extern $isFunctioneel = true
      $rolProperty =>
				psp:Property $operation
					extern $isFunctioneel = true
					extern $isVerplicht = true
					-- possible values are: "add", "remove", "set"
					$range => psp:String
			$mogelijkeBinding => psp:Rol
	$binnenRolBeschrijving =>
		psp:Rol $binnenRolBeschrijving
			extern $isFunctioneel = true
			$mogelijkeBinding => psp:ElkType
	$rolInContext =>
		-- The rol we will assign to. The qualified name is used!
		psp:Rol $rol
			extern $isFunctioneel = true
			$mogelijkeBinding => psp:Rol
	$rolInContext =>
		-- The rol instance we will add, delete or set:
		psp:Rol $value
			extern $isFunctioneel = true
			$mogelijkeBinding => psp:Function

-- We add to the context of the actie that this statement occurs in.
-- assignToProperty :: forall e. RolID -> PropertyName -> Value -> MonadTransactie e Unit
-- Apply like this for the statement: 'voornaam van getuige += "Jan"':
--	assignToProperty <gen>
--		extern $operation = "add"
--		$rol => pol:Aangifte$getuige
--		$property => psp:Persoon$voornaam
--		$value =>
--			q:Constant "Jan"
-- Apply like this for the statement: 'voornaam van getuige += verdachte voornaam':
--	assignToProperty <gen>
--		extern $operation = "add"
--		$rol => pol:Aangifte$getuige
--		$property => psp:Persoon$voornaam
--		$value =>
--			q:compose $xxx
--				$operand (1) =>
--					q:constructRolLookup $verdachte
--				$operand (2) =>
--					q:DataTypeGetter <gen>
--						extern $functionName = "context"
--				$operand (3) =>
--					q:constructExternalPropertyLookup $voornaam
psp:Context a:assignToProperty
	$buitenRolBeschrijving =>
		psp:Rol $buitenRolBeschrijving
			extern $isFunctioneel = true
			$mogelijkeBinding => psp:Rol
      $rolProperty =>
				psp:Property $operation
					extern $isFunctioneel = true
					extern $isVerplicht = true
					-- possible values are: "add", "remove", "set"
					$range => psp:String
			$rolProperty =>
				psp:Property $constantValue
					extern $isFunctioneel = true
					extern $isVerplicht = false
					$range => psp:String
	$binnenRolBeschrijving =>
		psp:Rol $binnenRolBeschrijving
			extern $isFunctioneel = true
			$mogelijkeBinding => psp:ElkType
	$rolInContext =>
	$rolInContext =>
		-- The property we will change. The qualified name is used!
		psp:Rol $property
			extern $isFunctioneel = true
			$mogelijkeBinding => psp:Property
	$rolInContext =>
		-- The property query that gives the value:
		psp:Rol $value
			extern $isFunctioneel = true
			$mogelijkeBinding => psp:Function

-- Apply an effectful function like storeDomeinFileInCouchdb as follows:
-- storeDomeinFileInCouchdb :: forall e. DomeinFile -> MonadPerspectives (AjaxAvarCache e) Unit
-- The Action is for the bot that plays a role in a model:CrlText$Text context.
-- The contextId that the action applies to identifies this context, hence we need no parameters when calling this function.
--	a:effectFullFunction <gen>
--		extern $functionName = "storeDomeinFileInCouchdb"

psp:Context a:effectFullFunction
$buitenRolBeschrijving =>
	psp:Rol $buitenRolBeschrijving
		extern $isFunctioneel = true
		$mogelijkeBinding => psp:Rol
		$rolProperty =>
			psp:Property $functionName
				extern $isFunctioneel = true
				extern $isVerplicht = true
				$range => psp:String
	$binnenRolBeschrijving =>
		psp:Rol $binnenRolBeschrijving
			extern $isFunctioneel = true
			$mogelijkeBinding => psp:ElkType
	$rolInContext =>
		-- The parameters of the effectful function.
		psp:Rol $parameter
			extern $isFunctioneel = false
			$mogelijkeBinding => psp:ElkType
