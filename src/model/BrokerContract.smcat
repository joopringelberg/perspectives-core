#https://state-machine-cat.js.org/
initial,
Initialize:
  entry/ User becomes AccountHolder,
CanRegister:
  entry/ Registered = rabbit:SelfRegister,
Active:
  entry/Set: 
  - UseExpiresOn 
  - GracePeriodExpiresOn
  - TerminatesOn
{
  ExpiresSoon:
    entry/ Notify AccountHolder,
  Suspended:
    entry/ Notify AccountHolder
      PreventAMQPaccountFromReading, 
  ExtensionPending:
    exit/ ExtensionRequested=false
      SetPermissions;

  Active => ExpiresSoon: [CurrentDate > UseExpiresSoon];

  ExpiresSoon => Suspended: [CurrentDate > GracePeriodEndsOn];

  Suspended => Terminated: [CurrentDate > TerminatesOn];

  # The AccountHolder 
  #requests an extension.
  ExpiresSoon => ExtensionPending: [ExtensionRequested];
  Suspended => ExtensionPending: [ExtensionRequested];

  # The Administrator sets
  # the value of ExtensionRequested
  # to false in order to restore the account.
  ExtensionPending => Active: [not ExtensionRequested];
},
Terminated:
  entry/ 
  DeleteAMQPaccount 
  DeleteQueue
  Registered = false
  exit/ 
  PrepareAMQPaccount
  Registered = true;

initial => Initialize;
Initialize => CanRegister: User fills Administrator [exists AccountHolder && exists Administrator];
# This is an automatic transition 
# as Registered is computed on entry 
# of CanRegister.
CanRegister => Active: [Registered];
Terminated => Active: RestoreAccount[Registered];
