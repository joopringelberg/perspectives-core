Context model:TestTDC als t:

import model:Perspectives als psp:

Section $rolInContext

-- MissingMogelijkeBinding, AspectRolNotFromAspect
psp:Context t:myContextDef1
	prototype psp:ContextPrototype
	$aspect => psp:Context
	$rolInContext =>
		psp:Rol $rol1
			extern $isFunctioneel = true
			extern $isVerplicht = true
			$aspectRol => psp:Rol$mogelijkeBinding

-- MissingRolInstance
t:myContextDef1 t:myContext1
	prototype psp:ContextPrototype

psp:Context t:myContextDef2
	$buitenRolBeschrijving => 
		psp:Rol $buitenRolBeschrijving
			extern $isFunctioneel = true
			$rolProperty =>
				psp:Property $contextDef2ExtProp1
					extern $isFunctioneel = true
					extern $isVerplicht = true
					$range => psp:Boolean
			$mogelijkeBinding => psp:Rol
	$binnenRolBeschrijving => 
		psp:Rol $binnenRolBeschrijving
			extern $isFunctioneel = true
			$rolProperty =>
				psp:Property $contextDef2IntProp1
					extern $isFunctioneel = true
					extern $isVerplicht = true
					$range => psp:Boolean
			
	$aspect => psp:Context
	$rolInContext =>
		psp:Rol $rol1
			extern $isFunctioneel = true
			$mogelijkeBinding => t:myContextDef2
			$rolProperty =>
				psp:Property $rol1Property1
					extern $isFunctioneel = true
					extern $isVerplicht = true
					$range => psp:Boolean

-- IncorrectBinding, RolNotDefined, MissingPropertyValue
t:myContextDef2 t:myContext2
	prototype psp:ContextPrototype
	$rol1 => t:myContext1
	$rolNotDefined => t:myContext1

-- MissingPropertyValue
t:myContextDef2 t:myContext3
	prototype psp:ContextPrototype
	$rol1 => t:myContext2

-- MissingExternalPropertyValue, MissingInternalPropertyValue, IncorrectPropertyValue
t:myContextDef2 t:myContext4
	prototype psp:ContextPrototype
	$rol1 => t:myContext2
		$rol1Property1 = "aap"

-- TooManyPropertyValues, PropertyNotDefined
t:myContextDef2 t:myContext5
	prototype psp:ContextPrototype
	extern $contextDef2ExtProp1 = false
	intern $contextDef2IntProp1 = true
	$rol1 => t:myContext2
		$rol1Property1 = true,false
		$doesNotExist = "aap"

-- CycleInAspects, CycleInAspectRoles, CycleInAspectProperties
psp:Context t:myContextDef3
	prototype psp:ContextPrototype
	$aspect => t:myContextDef4
	$rolInContext =>
		psp:Rol $myContextDef3Rol1
			extern $isFunctioneel = true
			$aspectRol => t:myContextDef4$myContextDef4Rol1
			$rolProperty => 
				psp:Property $myContextDef3Rol1Prop1
					extern $isFunctioneel = true
					extern $isVerplicht = false
					$aspectProperty => t:myContextDef4$myContextDef4Rol1$myContextDef4Rol1Prop1

psp:Context t:myContextDef4
	prototype psp:ContextPrototype
	$aspect => t:myContextDef3
	$rolInContext =>
		psp:Rol $myContextDef4Rol1
			extern $isFunctioneel = true
			$aspectRol => t:myContextDef3$myContextDef3Rol1
			$rolProperty => 
				psp:Property $myContextDef4Rol1Prop1
					extern $isFunctioneel = true
					extern $isVerplicht = false
					$aspectProperty => t:myContextDef3$myContextDef3Rol1$myContextDef3Rol1Prop1

-- RolWithoutContext. The typeDefChecker will not find this: the model functions as context.
psp:Rol t:myRoqueRol
	extern $isFunctioneel = true
	extern $isVerplicht = false

-- CannotOverrideBooleanAspectProperty, MissingRange, RangeNotSubsumed
psp:Context t:myContextDef5
	prototype psp:ContextPrototype
	$aspect => t:myContextDef2
	$rolInContext =>
		psp:Rol $rol1
			$aspectRol => t:myContextDef2$rol1
			$rolProperty =>
				psp:Property $myContextDef5Rol1Prop1
					extern $isFunctioneel = false
					extern $isVerplicht = true
					$aspectProperty => t:myContextDef2$rol1$rol1Property1
					$range => psp:String
			$rolProperty =>
				psp:Property $myContextDef5Rol1Prop2
					extern $isFunctioneel = true
					extern $isVerplicht = true
			$mogelijkeBinding => psp:Context
