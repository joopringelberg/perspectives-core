import React, { Component } from "react";

import AceEditor from "react-ace";

import "./App.css";
import { main } from "./output/Main";
import { Context, viewComponent, Binding } from "./client/hoc";
import PropTypes from "prop-types";

main();

class App extends Component
{
  render ()
  {
    return (
      <div className="App">
        <header className="App-header">
          <h1 className="App-title">Perspectives</h1>
        </header>
        <Context type="model:Systeem$Systeem" rollen={["gebruiker", "trustedCluster"]} instance="model:User$MijnSysteem">
          <Gebruiker_VolledigeNaam rol="gebruiker"/>
          <Binding rol="trustedCluster">
            <TrustedCluster_BuitenRol_Kaartje/>
          </Binding>
        </Context>

        <AceEditor
          mode="perspectives"
          theme="perspectives"
          onChange={onChange}
          name="aceEditor"
          editorProps={{$blockScrolling: true}}
        />
      </div>
    );
  }
}

function onChange(newValue) {
  console.log("change",newValue);
}

// function test()
// {
//   return (<View naam="volledigeNaam">
//     <p><label>Gebruiker:</label><Property naam="voornaam"/><Property naam="achternaam"/></p>
//   </View>);
// }


// Boilerplate code, can be generated by Perspectives for any Rol and View.
// TODO: de propertynamen kunnen uit een aspect komen, of van de binding.
// TODO: De locale naam is dan onvoldoende.
gebruiker_VolledigeNaam.propTypes = {voornaam: PropTypes.string, achternaam: PropTypes.string};
// gebruiker_VolledigeNaam.rol = "model:Systeem$Systeem$gebruiker";
const Gebruiker_VolledigeNaam = viewComponent( gebruiker_VolledigeNaam );

function gebruiker_VolledigeNaam(props)
{
  return <p><label>Gebruiker:</label>{props.voornaam + " " + props.achternaam}</p>;
}

// Boilerplate code, can be generated by Perspectives for any Rol and View.
trustedCluster_BuitenRol_Kaartje.propTypes = {naam: PropTypes.string};
// trustedCluster_BuitenRol_Kaartje.rol = "model:Systeem$TrustedCluster$buitenRolBeschrijving";
const TrustedCluster_BuitenRol_Kaartje = viewComponent( trustedCluster_BuitenRol_Kaartje );

function trustedCluster_BuitenRol_Kaartje(props)
{
  return <p><label>TrustedCluster:</label>{props.naam}</p>;
}

export default App;
