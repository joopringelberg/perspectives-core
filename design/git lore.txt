ATOM/GIT HANDIGHEID

1. Kort overzicht van commits (zie verder: https://git-scm.com/book/en/v2/Git-Basics-Viewing-the-Commit-History):

	git log -5 --pretty=format:"%cr, %s"

2. Bestand herstellen tot een vorige commit (met hash xxx):

	git checkout xxx filename

3. The Alt+Cmd+Z keybinding checks out the HEAD revision of the file in the editor.

4. Het verschil van een file in de ene en de andere branch:

	git diff WorkingQueries:src/domeinCache.purs master:src/domeinCache.purs

5. OpenDiff gebruiken:

	git difftool --tool=opendiff

6. De veranderingen in een file vergeleken over twee branches, in opendiff:

	git difftool --tool=opendiff  WorkingQueries:src/domeinCache.purs master:src/domeinCache.purs

7. Kopieer een file uit een andere branch naar de huidige:

	git checkout otherbranch myfile.txt

8. List files in andere branch:

	git ls-tree -rt --name-only master

9. Maak een nieuwe branche en laat HEAD naar die branch wijzen:

	git branch myBranchName
	git checkout myBranchName

10. Toon de branches:

	git log --oneline --decorate --graph --all

11. Toon veranderde files met status in een bepaalde commit:

	git show --name-status 10f479c

12. Toon lijst van tags/met de eerste vijf regels van de aantekening:

	git tag
	git tag -n5

13. Maak tag met aantekening:

	git tag -a v1.4 -m "my version 1.4"

14. Maak branch van tag:

	git branch newbranch v1.0


OPEN
1. Het zou superhandig zijn als alle voorkomens van een woord oplichten als je het selecteert of de cursor erin plaatst.
Het mooist zou het zijn als alleen de voorkomens oplichten die in scope zijn (alle voorkomens van een functie parameter b.v.).
2. Bookmarks, of anderszins een manier om regels te markeren.
