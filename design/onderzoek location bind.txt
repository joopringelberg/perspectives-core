LOCATION BIND

Onderzoek: kan de bind functie voor de Bind instance van Location in purescript geschreven worden in termen van connectLocations?
connectLocations verbindt twee locations met een functie. 
bindLoc doet hetzelfde maar gebruikt de functie om de locatie te produceren. 
Tevens wordt een geschikte update functie ge√Ønstalleerd.

Vragen:
1. Waar wordt connectLocations gebruikt?
	- in Location.purs in: 
		- memorizeMonadicFunction
		- traverseLoc
	- in LocationT.purs in:
		- bind1, de bind functie van de Bind instance van LocationT
	- in QueryCombinators.purs in:
		- mclosure'.

2. Waar wordt memorizeMonadicFunction gebruikt?
	In SystemQueries.purs in:
		- types MAAR LET OP: types is geschreven in termen van mclosure en die probeer ik juist memoriserend te maken. Lukt dat, dan hebben we memorizeMonadicFunction niet nodig.

3. Waar wordt traverseLoc gebruikt?
	In PropertyComposition.purs in:
		- memorizeSingleGetter
		- memorizePluralGetter
		- pTos
		- pTop

ONDERZOEK TOEPASSINGEN CONNECTLOCATIONS
1. Wordt de tweede locatie die met connectLocations wordt verbonden via de functie, geproduceerd door de functie?
2. Is het enige argument van de functie de eerste locatie?

traverseLoc: nee. De nieuwe locatie wordt expliciet met locate gemaakt.

bind1: ja op beide vragen.
Maar de functie f produceert een Location in LocationT.
HIER HEBBEN WE DUS EEN PROBLEEM MET UPDATE

memorizeMonadicFunction: ja op beide vragen.
Hier zou connectLocations dezelfde verbinding mogen leggen als bij bind. Maar:
de functie produceert een resultaat in een monad: m (Location a). Dus bij update moet Location a uit de monad context gehaald worden voordat het in de oorspronkelijke locatie gezet kan worden. 
HIER HEBBEN WE DUS EEN PROBLEEM MET UPDATE
NB: DEZE FUNCTIE WORDT OBSOLETE ALS MCLOSURE MEMORISEERT.

mclosure': ja op beide vragen.
Exact dezelfde situatie als bij memorizeMonadicFunction. De functie h produceert een Location in een monad.
HIER HEBBEN WE DUS EEN PROBLEEM MET UPDATE

STRATEGISCHE ALTERNATIEVE OPLOSSINGEN:
1. Los mclosure op
2. Los bind1 op.

of:
1. los bind1 op
2. implementeer mclosure in termen van LocationT.

In beide gevallen kan connectLocations blijven zoals ie is.