RELATIEVE NAMEN IN CRL
Met het $-teken kunnen we een //relatieve// naam gebruiken in een CRL tekst. Er blijken drie verschillende syntactische vormen te moeten bestaan:
	- een vorm om een in een andere contextInstantie gebonden RolInstantie mee aan te duiden, //relatief// ten opzichte van de huidige context.
	- een vorm om een in een andere namespace //relatief ten opzichte van de huidige// gebonden ContextInstantie mee aan te duiden
	- een vorm om een ContextInstantie mee te identificeren, of een RolType, PropertyType of ContextType mee aan te duiden, //relatief aan de huidige namespace//;

De eerste twee vormen zetten we in bij rolbinding; de tweede bij contextdeclaratie.

ELDERS GEBONDEN ROLINSTANTIES AANDUIDEN
Het is mogelijk om een rol te binden aan een andere rol. Daar bestaan twee mogelijkheden voor:
	1. Met een query (nog niet geïmplementeerd)
	2. Met een relativeRolInstanceID.
De laatste vorm stelt ons in staat om als het ware 'omhoog te reiken' in de hiërarchie van geneste contexten en op een willekeurig niveau een rolinstantie aan te wijzen. De verwijzing bestaat uit drie delen:
	- een aantal (minstens 2) $-tekens, waarmee we bepalen hoeveel niveaus we omhoog reiken (één $-teken reikt binnen de context van de rol (die we willen binden) zelf, en dat staan we om semantische reden niet toe).
	- de naam van de Rol (het type, dus)
	- een index tussen haakjes waarmee we de instantie van de Rol identificeren.

ELDERS GEBONDEN CONTEXTINSTANTIES AANDUIDEN
Een typische use case is als we de mogelijkeBinding van een Rol willen aangeven als een op een hoger niveau gebonden type. Bijvoorbeeld: bij een gedefinieerde GebruikerRol geven we met een subjectRol aan welke Actie hij mag uitvoeren. GebruikerRol en Actie zijn gedefinieerd binnen hetzelfde ContextType.
Deze vorm stelt ons in staat om een identifier van een Context samen te stellen als een pad, relatief ten opzichte van de huidige namespace. Bij de contextdeclaratie gebruiken we een $-teken om de huidige namespace (context) mee aan te duiden. Met **twee** $-tekens duiden we de omhullende namespace aan, enzovoort. Uiteindelijk volgt de lokale naam van de Context die we bedoelen. Zo'n relativeContextInstanceID bestaat dus uit:
	- twee of meer $-tekens
	- een al dan niet gesegmenteerde naam.

IDENTIFIER VOOR CONTEXTTYPE MAKEN
In een ContextDeclaratie moeten we een identifier voor de gedeclareerde context instantie geven. We kunnen dat doen door gebruik te maken van de namespace die bij de syntactische positie hoort, door een naam met een $-teken te prefixen. Behalve deze methode, hebben we de nog twee mogelijkheden om een identifier voor een gedeclareerde context te maken, zodat we in totaal hebben:
	- expandedContextName
	- prefixedContextName
	- contextInstanceIDInCurrentNamespace

CONTEXTEN, ROLLEN EN PROPERTIES AANDUIDEN
In context-declaratie, een rolbinding-expressie, en in een property-assignment expressie, moeten we respectievelijk de context-, rol- en propertynaam gebruiken om aan te geven welk type context, rol of property we willen maken, binden of toewijzen. Daarbij kunnen we gebruik maken van de type-namespace. Een relatieve naam construeren we door een $-teken voor de lokale rol- of propertynaam te zetten.

PARSER NAMEN
We gebruiken de volgende namen voor de deelparsers die deze constructies verwerken:
	- contextInstanceIDInCurrentNamespace ($localcontextname)
	- relativeContextInstanceID ($$contextinstancename)
	- relativeRolInstanceID ($$gebruiker(1))
	- relativeContextTypeName ($contextName <instantienaam>)
	- relativeRolTypeName ($rolname => ...)
	- relativePropertyTypeName ($propertyname = ...)


ROLBINDING: AAN ROL OF CONTEXT
We kunnen een RolInContext binden aan een andere RolInContext, of aan de BuitenRol van een Context.
1. Binding aan een RolInContext kan op twee manieren:
	- met een relativeRolInstanceID
	- met een query, waarmee we een context bij zijn absolute naam kunnen identificeren en vandaar met een aantal stappen naar een rol kunnen navigeren. Deze mogelijkheid wordt nog niet door de parser ondersteund.
2. Binding aan een Context kan door 
	* een expanded of prefixed ContextName te gebruiken. De parser bindt onder water de context niet rechtstreeks, maar via zijn buitenrol. De modelleur hoeft die buitenrol niet op te schrijven.
	* een relativeContextInstanceID te gebruiken. Ook hier geldt dat de parser bindt aan de buitenRol van de geïdentificeerde context, zonder dat de modelleur die buitenRol heeft opgeschreven.

