ROLTYPE BUG IN PARSER
De parser construeert een type voor de buitenrol van een Context door
	- het type van de Context te nemen
	- daar $buitenRolBeschrijving aan vast te plakken.
	
Bijvoorbeeld: als X het type psp:Actie heeft, krijgt de buitenrol van X het type psp:Actie$buitenRolBeschrijving.

Maar dat is voor psp:Actie onjuist, omdat hij geen eigen buitenRolBeschrijving heeft, maar die van psp:Context overneemt via zijn prototype. Dus is het juiste type eigenlijk: psp:Context$buitenRolBeschrijving.

psp:Actie kan het prototype van psp:Context overnemen, omdat hij psp:Context als Aspect heeft. Een Actie is dus ook een Context. Dat is nodig omdat we de rol $aspect willen kunnen gebruiken in Actie definities.

Een Context heeft maar één prototype. Maar dat kan wel de wortel zijn van een prototype-hierarchie waarin zich op willekeurige hoogte een buitenRolBeschrijving kan bevinden.

Het probleem is, tijdens het parseren van een specifieke Context, dat die hiërarchie misschien nog niet is opgebouwd.

Je zou daarom in een aparte fase na het parseren van alle contexten in de modelfile per context moeten nagaan wàt het effectieve type van de buitenrol van die context moet zijn.

DE SYSTEMATIEK VAN BUITENROLBESCHRIJVING
Altijd als je een roldefinitie maakt met de lokale naam "buitenRolBeschrijving", dan bind je die aan zijn omhullende (context)definitie met de rol psp:Context$buitenRolBeschrijving.

Er ontstaat dan een roldefinitie met de lokale naam "buitenRolBeschrijving", maar in een andere namespace. Bijvoorbeeld: psp:Rol$buitenRolBeschrijving.
Deze rol beschrijft de buitenRol van contexten waarvan het type psp:Rol is. Dat zijn dus contexten die een rol definiëren. Oftewel, het type van de buitenRol van een context die als type psp:Rol heeft, is psp:Rol$buitenRolBeschrijving.

ContextType (T)				Context	(X)						Rol										Bound Value (B)
psp:Context					psp:Rol							psp:Context$buitenRolBeschrijving		psp:Rol$buitenRolBeschrijving
psp:Rol						psp:View$propertyReferentie		psp:View$propertyReferentie_buitenRol	psp:Rol$buitenRolBeschrijving


Dus, terugredenerend:
1. Ga uit van een buitenRol BR.
2. Bepaal de context van BR op X (dit is door de parser goed ingevuld).
3. Bepaal het type van X op T (dit is door de parser goed ingevuld).
4. Zoek dan de psp:Context$buitenRolBeschrijving van T. Dit is B.
B is het type van de buitenRol BR.

Kan je ervan uitgaan dat deze procedure altijd gevolgd kan worden terwijl de modelfile nog niet geheel is verwerkt?

Stappen 2 en 3 kun je zonder meer uitvoeren. Je hebt dan T en moet daarvan de rol psp:Context$buitenRolBeschrijving bepalen. Deze kan lokaal zijn aangelegd, maar ook in de prototype hiërarchie gevonden worden.
Als type T is buiten de modelfile gedefinieerd is, is er geen probleem.
Als type T binnen de modelfile gedefinieerd is, heeft zijn buitenRol mogelijk nog geen type.
Als psp:Context$buitenRolBeschrijving lokaal bij T is vastgelegd, kun je zonder probleem B bepalen.
Als psp:Context$buitenRolBeschrijving in een prototype van T is vastgelegd, moet je het prototype van T kunnen vinden. 
Dat vindt je via de binding van de buitenRol van T. Die is ingevuld (dat die buitenRol mogelijk geen type heeft, is geen bezwaar).
Recursief geldt dat voor elk prototype.
Kortom, na parseren maar vóór het aanleggen van de types van de buitenRollen kun je zonder bezwaar in de prototypehiërarchie zoeken naar de rol psp:Context$buitenRolBeschrijving.


Het was:
    "model:TestBotActie$Test$botCopiesV1ToV2_buitenRol": {
      "pspType": "model:Perspectives$Actie$buitenRolBeschrijving",
het is nu:
    "model:TestBotActie$Test$botCopiesV1ToV2_buitenRol": {
      "pspType": "model:Perspectives$ContextPrototype$buitenRolBeschrijving",
en dat klopt!


Een instantie van de Actie tba:Test$botCopiesV1ToV2 heeft een buitenRol die als type heeft de buitenRolBeschrijving die geldt voor tba:Test$botCopiesV1ToV2
Maar wat is dat?
Die vind ik niet bij tba:Test$botCopiesV1ToV2.