GEEN UPDATE OP PROPERTY VERKREGEN OP ROLTELESCOOP

Voor een clusterGenoot is een View gedefinieerd:

				$viewInRol =>
					psp:View $Adressering
						$propertyReferentie => $$url
							$volgNummer = 1
						$propertyReferentie => psp:Systeem$gebruiker$voornaam
							$volgNummer = 2

waarbij $url op de rol zelf is gedefinieerd, maar $voornaam op de vuller van $clusterGenoot, te weten de $gebruiker van Systeem.

De GUI code ziet er zo uit:

                <Rollen rollen={["clusterGenoot"]}>
                  <View rolname="clusterGenoot" viewname="Adressering">
                    <ClusterGenoot />
                  </View>
                </Rollen>


function ClusterGenoot (props)
{
  return <p>Clustergenoot {props.voornaam} heeft url: {props.url}</p>;
}

Als de waarde van $voornaam van $gebruiker verandert, zie ik dat wel op een plek waar die property direct opgevraagd wordt op de $gebruiker rol, maar niet bij deze functie ClusterGenoot.

Het verschil tussen beide wordt uitgewerkt in deze twee functies:

constructRolPropertyGetter :: forall e.
  PropertyName ->
  TypedTripleGetter e
constructRolPropertyGetter pn = constructTripleGetter getProperty pn

constructRolPropertyLookup :: forall e.
  RolName ->
  TypedTripleGetter e
constructRolPropertyLookup ln = constructTripleGetter getPropertyFromRolTelescope ln

Dus in het geval van $url wordt constructRolPropertyGetter gebruikt, in het geval van $voornaam is dat constructRolPropertyLookup.

In beide gevallen is de propertyName volledig gekwalificeerd.

getPropertyFromRolTelescope :: forall e. PropertyName -> ObjectsGetter e

Het punt is, dat getPropertyFromRolTelescope een samengestelde ObjectsGetter is:

getPropertyFromRolTelescope :: forall e. PropertyName -> ObjectsGetter e
getPropertyFromRolTelescope qn rolId =
  unlessNull (getProperty qn) rolId
  <|>
  (binding /-/ getPropertyFromRolTelescope qn) rolId


Die memoriseert niet. Dus als er iets verandert in $gebruiker, wordt de berekening NIET opnieuw gedaan.

Ik zal deze zelfde functie als samenstelling van TripleGetters moeten maken om forward propagation te verkrijgen.

Het gaat erom een Triple te maken dat de propertywaarde representeert op de rol waar hij is gedefinieerd, en dan een Triple dat de waarde representeert op de rol waar hij wordt opgevraagd, en dan die laatste afhankelijk te maken van die eerste.