QUERYEFFECTS NO LONGER RUN

Ik heb in module Perspectives.QueryEffect het type van de functie pushesObjectsTo (~>) veranderd, door het type QueryEffect te veranderen. Het was:

		-type QueryEffect e = NamedFunction (Array String -> Eff (AjaxAvarCache e) Unit)
en is nu:
		type QueryEffect e = NamedFunction (Array String -> MonadPerspectivesQuery (AjaxAvarCache e) Unit)

In effectFun had ik staan:

      _ <- liftEff $ effect object

en nu:
      _ <- effect object

Oftewel, oorspronkelijk voerde ik de functie in Eff uit het QueryEffect uit en liftte ik het resultaat naar de monad met liftEff; nu pas ik de monadische functie toe. 
Merk op dat het type van pushesObjectsTo niet is veranderd (afgezien van dat QueryEffect veranderde)

In module Perspectives.Api los ik dat op door de effectfuncties te liften met liftEff in de functie subscribeToObjects:

	  (effectInReact :: QueryEffect (react :: REACT | e)) <- pure $ NamedFunction setterId (liftEff <<< setter)
	  void $ (subject ## query ~> effectInReact)

waarbij setter van type ReactStateSetter is:

		type ReactStateSetter e = Array String -> Eff (ApiEffects e) Unit
		
Zo'n ReactStateSetter is als volgt gemaakt:
		req.reactStateSetter = function (arrString)
			{
			  receiveValues(arrString);
			  return function () {};
			};
Oftewel, alhoewel hij Unit in Eff oplevert, voert hij ook onmiddelijk het effect uit aan de javascript kant!
Dit is een truc. Je zou verwachten dat het effect pas gesorteerd wordt als runEff toegepast wordt - maar dat is dus niet zo.

Ik heb dat gedaan, omdat ik in Perspectives.Actions óók pushesObjectsTo (~>) wilde gebruiken, en wel in compileBotAction:

		(conditionQuery :: TypedTripleGetter e) <- propertyQuery condition
		pure $ conditionQuery ~> NamedFunction actionType (actionObjectsGetter contextId)

Hierin is actionObjectsGetter :: (ContextID -> Action e) en 
		type Action e = (Array String -> MonadPerspectivesQuery (AjaxAvarCache e) Unit)

Hier komt de MonadPerspectivesQuery vandaan, de wens om QueryEffect op te tillen naar deze monad.

Voor QueryEffects moet de oude situatie hersteld worden. De functie die Unit in Eff oplevert moet uitgevoerd worden, om iets te zien in de GUI.


INTERMEZZO: HUIDIGE VERSIE VAN QUERYEFFECT VERGELIJKEN MET VERSIE IN GIT
git difftool --tool=opendiff  WorkingQueries:src/domeinCache.purs master:src/domeinCache.purs
Wat is de revisie waarop ik wil teruggrijpen? De commit message is:
QueryEffect is now a function in MonadPerspectivesQuery

list een aantal commits:
git log -10 --pretty=format:"%h - %cr, %s"

commit hash: 36adf7d

git difftool --tool=opendiff  36adf7d:src/core/queryEffect.purs master:src/core/queryEffect.purs

Helaas, er gebeurt niets.

git diff HEAD~10 HEAD -- src/core/queryEffect.purs


EEN AANPAK
Ik maak van een Action een gewone TripleGetter, d.w.z. één die een Subject als argument neemt. Vervolgens koppel ik de conditie aan de actie met een gewone compositie van TypedTripleGetters, d.w.z. >->.

OPLOSSING
1. Ik heb Perspectives.QueryEffect hersteld.
2. In Perspectives.Actions bleek dat in updatePerspectEntiteitMember de volgorde van parameters van createDelta niet goed meeveranderd waren bij een vorige commit.