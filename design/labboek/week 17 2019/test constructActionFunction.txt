TEST Actions.constructActionFunction

TODO

DONE
1. Maak een instantie van tba:Test (usr:test1)
	HOE? Neem een voorbeeld aan systeemInstanties.crl.
	KLAAR.

2. Pas constructActionFunction toe op de id van de actie in tba:Test.
	* Maak een nieuwe testfile

3. Pas het resultaat toe op usr:test1

PROBLEEM:
Error: retrieveContextFromDomein: cannot find definition of model:TestBotActie$Test$botCopiesV1ToV2$effect_1 in retrieveContextFromDomein for model:TestBotActie
Dit is een Rolinstantie. Waarom wordt retrieveContextFromDomein ingezet?
OPGELOST.

PROBLEEM:
Als getPropertyFunction wordt ingezet op deze definitie:

						q:PropertyGetter _ -- This getter will be applied to the $object.
							extern $functionName = "constructInternalPropertyGetter"
							$property => tba:Test$binnenRolBeschrijving$v1
							?result => psp:String

krijg ik de foutmelding:

(MissingQualifiedProperty) Er is geen definitie voor de property 'model:TestBotActie$Test$botCopiesV1ToV2$c5$c6' voor de rol 'model:TestBotActie$Test$botCopiesV1ToV2$c5'.

	getPropertyFunction X

wordt:

	constructGetter QualifiedProperty X

en dat wordt:

	runMonadPerspectivesQueryCompiler rn (compileElementaryQueryStep (queryAstConstructor pn) (pn <> "_getterDescription"))
	
waar 

rn = deconstructNamespace X, oftewel de namespace van X.
queryAstConstructor = QualifiedProperty
pn = X
dus:

	(compileElementaryQueryStep (QualifiedProperty X) (X <> "_getterDescription"))

compileElementaryQueryStep doet een case analyse op s, die gebonden is aan (QualifiedProperty X) en komt uit bij:

	do
		dom <- getQueryStepDomain
		ensureRolHasProperty dom p
		  (qualifiedProperty p "searchProperty")

dom wordt gebonden aan de namespace van X
en p is X

Dus wordt getest:

	ensureRolHasProperty <namespace X> X

en dat is:

	checkRolForQualifiedProperty (PT.PropertyDef X) (PT.RolDef rolId)
	
Wat is X?
Een gegenereerde naam in de namespace tba:Test$botCopiesV1ToV2$_, d.w.z. de gegenereerde naam van de psp:assignToProperty beschrijving.

Het is duidelijk dat deze check niet ok is. Een zinvolle test zou zijn te onderzoeken of de waarde van $property wel een property is die gedefinieerd is voor de waarde van $object. Maar dat is een heel ander niveau.

M.a.w., op deze manier compileElementaryQueryStep aanvliegen gaat verkeerd.

Opgelost door de queryCompiler toe te passen op de binding van $value.


5. PROBLEEM: als de waarde voor assignToProperty dan bekend is, wordt hij niet toegekend aan de binnenRol.

* De $value query van het $effect van de Actie start bij de context;
* maar de operatie die de constructActionFunction maakt, moet worden toegepast op het $object van de actie.
OPGELOST door de binnenRol apart op te slaan.

4. Check in de actionCompiler de andere gevallen van toepassen van de queryFunctionDescriptionCompiler; vervang zo nodig door toepassing van de queryCompiler.

